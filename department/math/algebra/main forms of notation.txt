📝 Major Mathematical Notations
1. Arithmetic Notation

Operations on numbers: +, −, ×, ÷, =.

Includes decimal, fraction, and percent forms.

Focus: binary operations, seed → operator → operating number → equals → result.

2. Algebraic Notation

Letters for unknowns or variables: x, y, z.

Expressions combine numbers, variables, and operations: 3x + 5 = 11.

Polynomials, powers, and exponents: x^2, x^3.

Focus: writing general expressions and equations in symbolic form.

3. Function Notation

Standard form: f(x), g(t), h(θ).

Represents input → output mapping.

Example: f(x) = 2x + 3 means “for each x, double it and add 3.”

Focus: making relationships explicit and portable across contexts.

4. Summation Notation (Sigma Notation)

Compact representation of repeated addition.

Example: 
∑
𝑖
=
1
5
𝑖
=
1
+
2
+
3
+
4
+
5
=
15
∑
i=1
5
	​

i=1+2+3+4+5=15

Focus: efficiency and clarity when adding sequences or series.

5. Product Notation (Pi Notation)

Similar to sigma notation but for multiplication.

Example: 
∏
𝑖
=
1
4
𝑖
=
1
×
2
×
3
×
4
=
24
∏
i=1
4
	​

i=1×2×3×4=24

6. Set Notation

Symbols to describe collections of elements.

Examples: 
{
1
,
2
,
3
}
,
𝑥
∈
𝑅
,
𝐴
⊆
𝐵
{1,2,3},x∈R,A⊆B

Focus: membership, subsets, and operations like union (
∪
∪) and intersection (
∩
∩).

7. Interval Notation

Represents ranges of numbers on the real line.

Examples: [0,1] (closed), (0,1) (open), [0,∞)

Focus: compact representation of continuous sets.

8. Logic & Predicate Notation

Symbols for logical relationships: 
∧
,
∨
,
¬
,
⇒
,
⇔
,
∀
,
∃
∧,∨,¬,⇒,⇔,∀,∃

Focus: precise reasoning about truth and structure of statements.

9. Matrix & Vector Notation

Vectors: 
𝑣
⃗
=
[
𝑣
1
,
𝑣
2
,
𝑣
3
]
v
=[v
1
	​

,v
2
	​

,v
3
	​

]

Matrices: 
𝐴
=
[
1
	
2


3
	
4
]
A=[
1
3
	​

2
4
	​

]

Focus: compactly represent multidimensional data, transformations, or systems of equations.

10. Calculus & Differential Notation

Derivatives: 
𝑑
𝑦
𝑑
𝑥
,
𝑓
′
(
𝑥
)
,
𝑥
˙
dx
dy
	​

,f
′
(x),
x
˙

Integrals: 
∫
𝑓
(
𝑥
)
𝑑
𝑥
∫f(x)dx

Focus: describe rates of change and accumulation symbolically.

11. Advanced Notations (optional for later stages)

Set-builder notation: 
{
𝑥
∈
R
∣
𝑥
>
0
}
{x∈R∣x>0}

Big-O notation: 
𝑓
(
𝑛
)
=
𝑂
(
𝑛
2
)
f(n)=O(n
2
)

Summation with conditions: 
∑
𝑖
=
1
𝑛
𝑖
2
∑
i=1
n
	​

i
2

Tensor notation, logic circuits, etc.

💡 Pedagogical Tip

Each new topic introduces a notation “module”.

Students see notation as a language of the area: how to write objects, operations, and relationships.

By learning notation before computation, students gain fluency and confidence in reading math.