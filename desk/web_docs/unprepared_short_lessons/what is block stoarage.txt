What is Block Storage?
Create an AWS Account
What is block storage?
Block storage is technology that controls data storage and storage devices. It takes any data, like a file or database entry, and divides it into blocks of equal sizes. The block storage system then stores the data block on underlying physical storage in a manner that is optimized for fast access and retrieval. Developers prefer block storage for applications that require efficient, fast, and reliable data access. Think of block storage as a more direct pipeline to the data. By contrast, file storage has an extra layer consisting of a file system (NFS, SMB) to process before accessing the data.

What are the benefits of block storage?
Organizations use block level storage because of the following advantages.

Performance
Metadata is additional data that describes the primary data contained in the storage system. Block storage uses limited metadata but relies on unique identifiers assigned to each block for read/write operations. This reduces data transfer overhead and allows the server to efficiently access and retrieve data in block storage. Because block storage metadata is limited, block storage delivers ultra-low latency required for high-performance workloads. This is required for latency sensitive applications like databases. For example, Viasat uses Amazon Elastic Block Store (Amazon EBS) to capture high throughput (highly transactional) data and optimize storage costs. Organizations use Amazon EBS for performance and cost optimization, scale and agility, and for data protection with EBS Snapshots.

Block storage architecture provides multiple paths to the data whereas file storage only provides one path, this is why block storage is preferred for high performance applications.

Flexibility and scalability
Block storage devices are not constrained to specific network environments. Individual blocks can be configured for different operating systems, such as Windows or Linux. Developers can share data across multiple environments to ensure high availability. The block storage architecture is also highly scalable. Developers can add new blocks to existing ones to meet growing capacity needs.

Frequent modification
Block storage supports frequent data writes without affecting performance. Instead of rewriting the entire file, the system identifies the particular block that needs to be amended. Then, it rewrites the selected block with the new data. This makes block storage very efficient for managing large files that require frequent updates.

Granular control
Developers gain a high degree of control over storing data on block storage. For example, they can optimize performance by grouping fast-changing data on specific blocks and storing static files on others. This improves system performance as ongoing updates only affect a small number of data blocks instead of an entire file. For example, block storage gives you the flexibility to tier fast-changing data on solid state disk (SSD) for the highest performance, and store warm or cold data on lower cost hard drives (HDD).

What are the use cases of block storage?
Block storage’s unique characteristics make it the preferred option for transactional, mission-critical, and I/O intensive applications. Block storage Is used for a wide variety of applications including; relational or transactional databases, time series databases, containers, boot disks, and hypervisor files systems.

Storage area networks
Developers often deploy block storage as a storage area network (SAN). SAN is a complex network technology that presents block storage to multiple networked systems as if those blocks were locally attached devices. SAN's typically use fiber channel interconnects. In contrast, a network attached storage (NAS) is a single device that serves files over Ethernet.

The SAN architecture consists of three layers:

Host layer consists of the servers that manage storage access
Storage layer consists of physical block storage devices like magnetic tape, disk drives, or optical media
Fabric layer bridges SAN servers and SAN storage with devices like SAN switches, protocol bridges, routers, cables, and gateway devices
It is Important to note that SAN's employ redundancy using either synchronous or asynchronous replication across long distances. This mitigates downtime in the event that a geographic location can't be accessed.

The SAN architecture can work with several types of storage in a unified environment, including block storage. Block storage provides a high-efficiency alternative to file storage on SANs.

Containers
Developers use block storage to store containerized applications on the cloud. Containers are software packages that contain the application and its resource files for deployment in any computing environment. Like containers, block storage is equally flexible, scalable, and efficient. With block storage, developers can migrate the containers seamlessly between servers, locations, and operating environments.

Transactional workloads
Transactional workloads are sequences of data generated at specific points of business processes. For example, sales records, operation logs, and login alerts are transactional workloads. Organizations that process time-sensitive and mission-critical transactions store such workloads into a low-latency, high-capacity, and fault-tolerant database.

Block storage allows developers to set up a robust, scalable, and highly efficient transactional database. As each block is a self-contained unit, the database performs optimally, even when the stored data grows. Furthermore, individual storage blocks can be hosted at different servers, preventing access bottlenecks.

In mission-critical applications, block storage is secured by a redundant array of independent disks (RAID) to ensure data redundancy. The RAID system backs up data files in secondary storage and recovers the copy if the primary disk fails. This ensures that the application remains uninterrupted when storing and retrieving transactional workloads on block storage.

Analytics and data warehousing

Block storage is used with Hadoop's HDFS architecture (Hadoop Distributed File System) to store data as independently distributed units enabling performance for Hadoop and Kafka analytics applications.

Virtual machines
A virtual machine (VM) is technology that allows a computer to run a separate operating environment with software-defined computing resources. For example, you can run a Linux operating system on a Windows desktop with a VM. A hypervisor is an abstraction layer responsible for allocating the required memory, drive, and computing services to run the secondary operating environment.

Block storage supports popular VM hypervisors. Users can install the operating system, file system, and other computing resources on a block storage volume. They do so by formatting the block storage volume and turning it into a VM file system. This allows them to easily increase or decrease the virtual drive size and transfer the virtualized storage from one host to another. 

How does block storage work?
In a block storage system, you can break the data into independent fixed-size blocks or pieces. Each block is an individual piece of data storage. A complete piece of information, such as a data file, is stored in multiple, nonsequential blocks.

The block storage system does not maintain high-level metadata, such as file type, ownership, and timestamp. Developers must design a data lookup table in the application system to manage the storage of data into respective blocks. The application might store data in different operating environments to increase read/write efficiency.

Data write
During a write sequence, the application splits data into several block-sized sections. It writes the data into multiple blocks and records the block’s identifier in a data lookup table. The lookup table allows the server to calculate the relative address of data stored in the block.

Data read
When users request a specific file from the block storage system, the server uses the data-lookup table to determine where pieces of the data are stored. Then, the application retrieves the data from multiple blocks and merges them in the original sequence.

What other types of storage are available?
In addition to block storage, there are also object and file storage options. Each type offers its own unique advantages.

Object storage
Object storage is a technology that stores and manages data in an unstructured format called objects. Each object is tagged with a unique identifier and contains metadata that describes the underlying content. For example, object storage for photos contains metadata regarding the photographer, resolution, format, and creation time.

Developers use object storage to store unstructured data, such as text, video, and images. 

Block storage compared to object storage
Both storage solutions are beneficial depending on the use case. Block storage provides low latency and high-performance values in various use cases. Its features are primarily useful for structured database storage, VM file system volumes, and high volumes of read and write loads.

Object storage is best used for large amounts of unstructured data, especially when durability, unlimited storage, scalability, and complex metadata management are relevant factors for overall performance.

File storage
File storage stores data in a hierarchical structure of files and folders. In network environments, file-based storage often uses network-attached storage (NAS) technology. NAS allows users to access network storage data in similar ways to a local hard drive. File storage is user-friendly and allows users to manage file-sharing control.

Block storage compared to file storage
The file storage system stores data in a specific environment, while block storage systems can be integrated with different operating systems. File storage provides an intuitive interface for end-user computing. Meanwhile, you can add new data blocks to the block storage system without increasing operational latency. 

Instance storage
An instance store provides temporary block-level storage for your instance. This storage is located on disks that are physically attached to the host computer.

Instance store is ideal for temporary storage of information that changes frequently, such as buffers, caches, scratch data, and other temporary content. It's also useful for data that's replicated across a fleet of instances, such as a load-balanced pool of web servers.

An instance store consists of one or more instance store volumes exposed as block devices. The size of an instance store as well as the number of devices available vary by instance type

How can AWS support your block storage needs?
Amazon EBS is an easy-to-use block storage solution for cloud workloads. Developers use Amazon EBS to provide a persistent storage service for Amazon Elastic Compute Cloud (Amazon EC2) workloads.

Amazon EBS provides a highly scalable storage solution for mission-critical and I/O intensive applications.
Amazon EBS Snapshots provide an easy and secure method for block storage data protection.
Developers can install various types of databases on Amazon EBS, including SAP HANA, Oracle, Microsoft SQL Server, MySQL, Cassandra, and MongoDB.