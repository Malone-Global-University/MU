Skip to content
Chat history

You said:

<!DOCTYPE html>

<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Name of your website or page</title>
<link rel="icon" href="/images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../../../css/mgu.css" />

<style>
xmp {
  font-size: 1.25rem; /* Bigger text */
  font-family: monospace; /* Keeps code look */
  background: #f5f5f5; /* Light grey background */
  padding: 10px;
  border-radius: 6px;
  display: block; /* Ensures it takes full width */
  white-space: pre; /* Keeps spacing intact */
  color: black;
}
</style>




</head>
<body>

  <nav class="navbar">
  <div class="logo-container">
    <img src="/images/android-chrome-512x512.png" alt="Malone University Logo" class="logo-img" />
    <span class="school-name">Malone University</span>
  </div>

<button class="hamburger" aria-label="Toggle menu">☰</button>

  <ul class="nav-links">
    <li><a href="/">Home</a></li>
    <li><a href="/static/contact.html">Contact</a></li>
    <li><a href="/static/jm.html">Founder</a></li>
    <li><a href="/static/mission.html">Mission</a></li>
    <li><a href="/static/hardened.html">FINAL OFFER</a></li>
    <li><a href="/static/catalog.html">Catalog</a></li>
  </ul>
</nav>


<header class="hero">
<h1>BUILDING A WEBSITE-LESSON 1</h1>
</header>

<main>
<section id="html">
<h2>HTML</h2>
<p>
Websites are made from a single or multple webpages. A webpage is written using Hyper Text Markup Language (HTML). "Markup" means that the text will be wrapped with formatting tags to change the size, color, font, position, margin and other attributes. Websites and even word processing software use markup language to format the text seen on a screen.<br><br> A formatted text is text that is arranged with line breaks to start new paragraphs, and how wide the space between paragraphs are, among other details to make txt more readable. Without markup language text tends to be one big blob of words only seperated by a single space, no padding, no line breaks. 
</p>
<p>
Without line breaks, a paragraph will be rendered as a single line. Line breaks are what happens when you press the enter key using a word processor program like microsoft word, or Openoffice, to start a new line. Saying page break is the same thing as saying "new line".
</p>
</section>


<section id="readme.md">
<h2>README.MD</h2>
<p>
The opposite of markup is markdown (MD). Markdown is used mostly in text editors like microsoft notepad. This is very simple format that creates smaller files than microsoft word, this save space on hard-drive, loads and saves faster, but is very plain looking. Other uses for markdown is to write simple files to be stored by a database or other computer program. As you learn more programming you wiil see README.MD files more often. These are notes about programs that are contained in the same folder as the README.MD text file. We will use .txt and .MD files when building websites so it is important to understand these file extensions. 
</p>
</section>


<section id="file-extensions">
<h2>File extensions</h2>
<p>
	File extensions are the letters after the name of a file. Format follows "name of file" followed by ".file extension". The name of the file and the file extension are seperated by a period, such as "image.png" or "song.mp3". File extensions tell the computer what program to use to open a file. 
</p>
<p>
There are different types of computer files. Documents (doc) are written files like word documents, text documents, and html documents. Other files are images (img) like .png, .jpg, and .svg. And of course audio files like .mp3, .wav or .wav and  video files like .mp4.
</p>


<p>

Different types of files are encoded such that they can only be opened correctly by certain programs designed to run them. Users set "file associations" to tell an operating system how to open a file. Common example: You have an android phone and take a selfie. You go to your file manager in the phone and tp on photo. Android asks what program you want to use to open the photo: gallery, or photo viewer. It also asks if you want to use this program just once or always. If you choose always then you have set the file association for that file type. A file association is a mapping of what file extensions to what program, also known as file extension defaults, these are programs that open by default without being changed by users.
</p>
</section>



<section id="text-editors">
	<h2> Text Editors</h2>
<p>

To write HTML you need a text editor. Pick one: notepad, sublime, vs code, coffecup, web app editor or other. For these lessons I will use notepad and then sublime. Here is the minimal html needed to make a webpage:
</p>
<p>
<xmp><!DOCTYPE html>
<body>
</body>
</html>
</xmp>

</p>
<p>
But we want to use this:
</p>
<p>
<xmp><!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Name of your website or page</title>
<link rel="icon" href="images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="/css/styles.css" />
</head>
<body>
</body>
</html>
</xmp>
</p>
<p>
Code inside brackets are called tags. These are HTML tags. Type the code above into an editor and save it as blank.html or blank.htm. This creates a blank template to make future pages.
</p>
</section>

<section id="notepad">
<h2>Notepad</h2>	
<p>
1. In notepad type blank.html for file name. Then change file type from .txt to "all files". This allows you to save the file with any file extension you choose. If you do not change the default setting it will save as a text file named blank.html.txt. This has a file name of "blank.html" with ".txt" as the file extension. If you change file type to "all files" notepad will save it as "blank.html" where the name of the file is simply "blank" and ".html" is the extension. 
</p>
<p>
In Windows operating system file extensions are not shown so your file will only show "blank" not "blank.html" because file extensions are ugly and we do not want to see them. If viewing files as icons they will appear using the icon file for what type of program opens them. I use Chrome as my default web browser so "blank.html" will shoe up in my folder as "blank" with a logo icon for chrome telling me that it is a webpage or link to a website.
</p>
</section>

<section id="sublime">
	<h2>Sublime</h2>
<p>
2. If you are using sublime save file as "blank" and then use the drop down box to select "HTML" as the file type. If there are weird HTML options just use the normal one that says "HTML,HTM, etc, etc".
</p></section>


<section id="explanation-of-code">
<h2>Explaination of code</h2>


<p>
I am going to number all 12 lines of the previous code and briefly explain them. Here is the code again:
</p>


<xmp>1.<!DOCTYPE html>
2.<html lang="en">
3.<head>
4.<meta charset="UTF-8" />
5.<meta name="viewport" content="width=device-width, initial-scale=1.0" />
6.<title>Name of your website or page</title>
7.<link rel="icon" href="images/favicon.ico" type="image/x-icon" />
8.<link rel="stylesheet" href="/css/styles.css" />
9.</head>
10.<body>
11.</body>
12.</html>
</xmp>
</p>

<p>
1. Every webpage must declare it's type. The following tag is a called an HTML declaration tag:

<pre><code>&lt;!DOCTYPE html&gt;</code></pre>
</p>

<p>
It's job is to tell web browers it is a webpage rather than a different type of internet resource or service.
</p>
<p>
2. This tells search engines and browsers what language your page is written in. Here I am using English: &lt;html lang="en"&gt;
</p>
<p>
3. This tag is used to nest metadata used by search engines for seo: &lt;head&gt;.
</p>
<p>

SEO stands for Search Engine Optimization, which means the better your SEO the higher up in searches your site will appear. This is important if your are running a business and you are using your website for advertising and marketing. More people will find your site and you will have more interactions with the public because your site is more public, more visibly seen.  
</p>
<p>


4. This tag tells browsers what encoding to use to render site: &lt;meta charset="UTF-8" /&gt;
</p>
<p>

 Render means "to run code and make visible the results" . UTF-8 is the standard encoding for all text documents in English in the Westrern Hemisphere. Encpdings used here mean things like what alphabet you are using and what character set (char-set), not what language you are typing in. For example French have latin letters but a different keyboard so they would use a different encoding. Asian languages do not have latin letters at all so would need an encoding that handles Asian char-sets, for example simplified Chinese.

</p>
<p>

5. Viewport gives instructions on how webpages should be displayed on different devices with different screen sizes, such as monitors, tablets, and smartphones: &lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /&gt;.

</p>
<p>

This tells browser what text to display when a mouse hovers over a tab&lt;title>Name of your website or page&lt;/title>.
</p>
<p>

6. This is a link to a favicon. A favicon is an avatar or logo for your website:
</p>
<p>

&lt;link rel="icon" href="images/favicon.ico" type="image/x-icon" /&gt;
</p>
<p>


7. This is a link to a stylesheet. Css is a simple language used with HTML to format or style your webpages: 
&lt;link rel="stylesheet" href="/css/styles.css" /&gt;
</p>
<p>

8. This is an end tag that closes the opening &lt;head&gt; tag:
&lt;/head&gt;
</p>
<p>


 Html has two types of tags, open and closed. Closed tags are used to nest text which open tags operate bythemselves. Nested text is like &lt;title&gt; My Title &lt;/title&gt; where you need &lt;title&gt; to start the tag and &lt;/title&gt; to close the tag. An open tag is like &lt;br&gt; which does not have a matching &lt;/br&gt;. &lt;br&gt; means "break space" and creates a new line. 
</p>
<p>

This tells the browser what is to be visibly shown in your webpage: &lt;body&gt;
This closes the  &lt;body&gt; tag: &lt;/body&gt;
This closes the  &lt;/html&gt; tag: &lt;/html&gt;
</p>
</section>
<p>

<section id="Summary">
	<h2>Summary</h2>
	
1. Opening html tag: All webpages start with and need this declaration:<br> &lt;!DOCTYPE html&gt;<br><br>
2. Language tag: It is proper to state your websites language:<br> &lt;html lang="en"&gt;<br><br>
3. Head tag: Metadata is only seen by browser not public and goes inside nested tags:<br> &lt;head>....&lt;/head&gt;.<br><br>
4. Charset tag: Meta charset means metadata character set:<br> &lt;meta charset="UTF-8" /&gt;<br><br>

5. Viewport tag: Viewport gives some rules for difference devive screen sizes:<br>
&lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /&gt;<br><br>

6. Title tag: What you write here helps people find your page if they have many tabs open:<br>
&lt;title>Name of your website or page&lt;/title&gt;<br><br>


7. Favicon link: This adds your favicon to your website so you look more professional:<br>
&lt;link rel="icon" href="images/favicon.ico" type="image/x-icon" /&gt;<br><br>

8. CSS stylesheet link: This styles your webpage and is a must if you have a big site and are not using inline styling:<br>
&lt;link rel="stylesheet" href="/css/styles.css" /&gt;<br><br>

9. Closing head tag: All metadata to be read by search engines and browsers should be nested in &lt;head&gt;...&lt;/head&gt;
10. Opening body tag. Whatever you want to be visible should be in nested body tags:<br> &lt;body&gt;...&lt;/body&gt;<br><br>
11. Closing body tag. Whatever you want to be visible should be in nested body tags:<br> &lt;body&gt;...&lt;/body&gt;<br><br>
12. Your entire document is nested inside declaration tags:<br> &lt;!DOCTYPE html&gt;...&lt;/html&gt;<br>
</p>
</section>
</main>
    <footer>
  <p>© 2025 Malone University. Building the future, on our own terms.</p>
  <p>
    <a href="https://twitter.com/MaloneGlobal" target="_blank" rel="noopener noreferrer" aria-label="Follow Malone University on Twitter">Twitter</a> |
    <a href="https://facebook.com/YOUR_HANDLE" target="_blank" rel="noopener noreferrer" aria-label="Follow Malone University on Facebook">Facebook</a> |
    <a href="https://instagram.com/maloneglobaluniversity" target="_blank" rel="noopener noreferrer" aria-label="Follow Malone University on Instagram">Instagram</a> |
    <a href="/static/terms.html">Terms</a> |
    <a href="/static/contact.html">Contact</a>
  </p>
</footer>


</body>
</body>
</html>
ChatGPT said:
I see what you’re going for — it’s a very thorough HTML lesson, but your markup has a couple of structural hiccups that could cause rendering issues.

Here’s what I spotted:

Double closing <body> tag
At the very end, you have:

</body>
</body>
</html>
That second </body> should be removed.

Extra <p> wrapper around <section>
In this part:

<p>
<section id="Summary">
You can’t put a <section> inside a <p> tag. Paragraphs can’t contain block-level elements like <section>. Just remove that <p>.

Minor typos & clarity fixes

"seperated" → "separated"

"wiil" → "will"

"tp on photo" → "tap on photo"

"shoe up" → "show up"

"devive" → "device"

"bythemselves" → "by themselves"

<br> is called a "line break," not a "page break" — page breaks are different.

Heading structure
You’ve got <h2> sections for topics, which is good. But you could also use <h3> for subtopics to make it easier for screen readers and SEO.

<xmp> tag is obsolete
<xmp> works for now but is deprecated and might not be supported forever.
The modern way is:

<pre><code>... your code ...</code></pre>
And you can style <code> the same way you’re styling <xmp> now.

If you want, I can give you a cleaned, fixed, and future-proof version of this page where everything is valid HTML5, still displays exactly the same, but is ready for long-term use. That way, your students see best practices from lesson 1.

Do you want me to give you that cleaned version?

You said:
write an html page c://mgu/technology/hobby.html that serves as an index for building a website. This is the first lesson in that series.
ChatGPT said:
Got it — you want c://mgu/technology/hobby.html to be the index page for the "Building a Website" series, and this will be Lesson 1.
I’ll make it a clean, valid HTML5 file with a consistent look and room for navigation to future lessons.

Here’s the full page:

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Building a Website – Lesson 1</title>
<link rel="icon" href="/images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../../../css/mgu.css" />
<style>
  /* Inline lesson-specific styles */
  .lesson-list {
    list-style: none;
    padding: 0;
  }
  .lesson-list li {
    margin: 8px 0;
  }
  .lesson-list a {
    text-decoration: none;
    color: #0077cc;
    font-weight: bold;
  }
  .lesson-list a:hover {
    text-decoration: underline;
  }
</style>
</head>
<body>

<nav class="navbar">
  <div class="logo-container">
    <img src="/images/android-chrome-512x512.png" alt="Malone University Logo" class="logo-img" />
    <span class="school-name">Malone University</span>
  </div>
  <button class="hamburger" aria-label="Toggle menu">☰</button>
  <ul class="nav-links">
    <li><a href="/">Home</a></li>
    <li><a href="/static/catalog.html">Catalog</a></li>
    <li><a href="/static/contact.html">Contact</a></li>
    <li><a href="/static/jm.html">Founder</a></li>
    <li><a href="/static/mission.html">Mission</a></li>
  </ul>
</nav>

<header class="hero">
  <h1>Building a Website – Hobbyist Series</h1>
  <p>Lesson 1: Introduction</p>
</header>

<main>
  <section>
    <h2>Welcome to the Series</h2>
    <p>
      This course will guide you through building your first website from scratch, step by step. 
      Whether you’re doing this as a hobby or aiming for a professional project, you’ll learn the 
      basics of HTML, CSS, and other tools that make the web work.
    </p>
    <p>
      Lesson 1 introduces what a website is, the tools you need, and the structure of a basic web page.
    </p>
  </section>

  <section>
    <h2>Lessons in This Series</h2>
    <ul class="lesson-list">
      <li><a href="lesson1.html">Lesson 1 – Introduction to Building Websites</a></li>
      <li><a href="lesson2.html">Lesson 2 – Understanding HTML</a></li>
      <li><a href="lesson3.html">Lesson 3 – Working with CSS</a></li>
      <li><a href="lesson4.html">Lesson 4 – Adding Images and Links</a></li>
      <li><a href="lesson5.html">Lesson 5 – Structuring a Multi-Page Site</a></li>
      <!-- Add more lessons as needed -->
    </ul>
  </section>

  <section>
    <h2>How to Use This Course</h2>
    <p>
      Each lesson builds on the previous one. Follow the links above in order, and try the 
      exercises at the end of each lesson to practice what you’ve learned.
    </p>
  </section>
</main>

<footer>
  <p>© 2025 Malone University. Building the future, on our own terms.</p>
  <p>
    <a href="https://twitter.com/MaloneGlobal" target="_blank" rel="noopener noreferrer">Twitter</a> |
    <a href="https://facebook.com/YOUR_HANDLE" target="_blank" rel="noopener noreferrer">Facebook</a> |
    <a href="https://instagram.com/maloneglobaluniversity" target="_blank" rel="noopener noreferrer">Instagram</a> |
    <a href="/static/terms.html">Terms</a> |
    <a href="/static/contact.html">Contact</a>
  </p>
</footer>

</body>
</html>
This file:

Lives at c://mgu/technology/hobby.html.

Has a clean navigation bar consistent with your site.

Introduces the "Building a Website" series.

Lists lessons in a simple clickable index.

Uses your existing mgu.css for main styles but adds small inline CSS for the lesson list.

If you want, I can also make lesson1.html next so this index actually links to a working first lesson. That would keep the series connected.

You said:
sure!
ChatGPT said:
Alright — here’s lesson1.html for your Building a Website hobbyist series.
It matches your site’s style and is written as a clean HTML5 lesson page so students can follow along.

File: c://mgu/technology/lesson1.html

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Lesson 1 – Introduction to Building Websites</title>
<link rel="icon" href="/images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../../../css/mgu.css" />
<style>
  pre, code {
    font-family: monospace;
    background: #f5f5f5;
    padding: 8px;
    border-radius: 6px;
    display: block;
    overflow-x: auto;
  }
</style>
</head>
<body>

<nav class="navbar">
  <div class="logo-container">
    <img src="/images/android-chrome-512x512.png" alt="Malone University Logo" class="logo-img" />
    <span class="school-name">Malone University</span>
  </div>
  <button class="hamburger" aria-label="Toggle menu">☰</button>
  <ul class="nav-links">
    <li><a href="/">Home</a></li>
    <li><a href="/static/catalog.html">Catalog</a></li>
    <li><a href="/static/contact.html">Contact</a></li>
    <li><a href="/static/jm.html">Founder</a></li>
    <li><a href="/static/mission.html">Mission</a></li>
  </ul>
</nav>

<header class="hero">
  <h1>Lesson 1: Introduction to Building Websites</h1>
</header>

<main>
  <section>
    <h2>What is a Website?</h2>
    <p>
      A website is a collection of web pages that are connected together, usually sharing a common 
      design and purpose. Websites are written using HTML (HyperText Markup Language) and styled 
      with CSS (Cascading Style Sheets). Often, JavaScript is added to make pages interactive.
    </p>
  </section>

  <section>
    <h2>The Basic Building Blocks</h2>
    <p>
      To build a website, you need to understand the three core technologies of the web:
    </p>
    <ul>
      <li><strong>HTML</strong> – Defines the structure and content of your page.</li>
      <li><strong>CSS</strong> – Controls the look, colors, fonts, and layout.</li>
      <li><strong>JavaScript</strong> – Adds interactivity and dynamic behavior.</li>
    </ul>
  </section>

  <section>
    <h2>Minimal HTML Example</h2>
    <p>Here is the smallest valid HTML document:</p>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;My First Web Page&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;p&gt;Hello, world!&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
    <p>Type this into a text editor, save it as <code>index.html</code>, and open it in your browser.</p>
  </section>

  <section>
    <h2>Tools You’ll Need</h2>
    <p>
      You don’t need anything fancy to start—just a simple text editor and a web browser.
    </p>
    <ul>
      <li>Text editors: Notepad (Windows), Sublime Text, VS Code, etc.</li>
      <li>Browsers: Chrome, Firefox, Edge, Safari, etc.</li>
    </ul>
  </section>

  <section>
    <h2>Next Steps</h2>
    <p>
      In <a href="lesson2.html">Lesson 2</a>, we’ll dive deeper into HTML and learn 
      about headings, paragraphs, and lists.
    </p>
  </section>
</main>

<footer>
  <p>© 2025 Malone University. Building the future, on our own terms.</p>
  <p>
    <a href="https://twitter.com/MaloneGlobal" target="_blank" rel="noopener noreferrer">Twitter</a> |
    <a href="https://facebook.com/YOUR_HANDLE" target="_blank" rel="noopener noreferrer">Facebook</a> |
    <a href="https://instagram.com/maloneglobaluniversity" target="_blank" rel="noopener noreferrer">Instagram</a> |
    <a href="/static/terms.html">Terms</a> |
    <a href="/static/contact.html">Contact</a>
  </p>
</footer>

</body>
</html>
Now you have:

hobby.html — index page for the Building a Website hobbyist series.

lesson1.html — first actual lesson in that series.

If you want, I can go ahead and create lesson2.html so students can click and keep learning without dead links. That way your index already works from day one.

You said:
make all remaining lessons in one go so I can copy them
ChatGPT said:
Alright — I’ll give you lesson2.html through lesson5.html in one shot, all following the same style you used for lesson1.html.

They’ll match your mgu.css, link to the next lesson, and be ready for copy-paste into your c://mgu/technology/ folder.
That way your Building a Website hobbyist series index (hobby.html) will work right away.

lesson2.html – Understanding HTML
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Lesson 2 – Understanding HTML</title>
<link rel="icon" href="/images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../../../css/mgu.css" />
<style>
  pre, code {
    font-family: monospace;
    background: #f5f5f5;
    padding: 8px;
    border-radius: 6px;
    display: block;
    overflow-x: auto;
  }
</style>
</head>
<body>

<nav class="navbar">
  <div class="logo-container">
    <img src="/images/android-chrome-512x512.png" alt="Malone University Logo" class="logo-img" />
    <span class="school-name">Malone University</span>
  </div>
  <button class="hamburger" aria-label="Toggle menu">☰</button>
  <ul class="nav-links">
    <li><a href="/">Home</a></li>
    <li><a href="/static/catalog.html">Catalog</a></li>
    <li><a href="/static/contact.html">Contact</a></li>
    <li><a href="/static/jm.html">Founder</a></li>
    <li><a href="/static/mission.html">Mission</a></li>
  </ul>
</nav>

<header class="hero">
  <h1>Lesson 2: Understanding HTML</h1>
</header>

<main>
  <section>
    <h2>What is HTML?</h2>
    <p>
      HTML stands for <strong>HyperText Markup Language</strong>. It’s the standard language used 
      to create the structure of web pages. HTML is made up of elements, each defined by a tag.
    </p>
  </section>

  <section>
    <h2>Basic Tags</h2>
    <ul>
      <li><code>&lt;h1&gt;...&lt;/h1&gt;</code> – Headings</li>
      <li><code>&lt;p&gt;...&lt;/p&gt;</code> – Paragraphs</li>
      <li><code>&lt;a href="..."&gt;...&lt;/a&gt;</code> – Links</li>
      <li><code>&lt;img src="..." alt="..."&gt;</code> – Images</li>
      <li><code>&lt;ul&gt; &lt;li&gt;...&lt;/li&gt; &lt;/ul&gt;</code> – Lists</li>
    </ul>
  </section>

  <section>
    <h2>Example</h2>
<pre><code>&lt;h1&gt;Welcome to My Website&lt;/h1&gt;
&lt;p&gt;This is my first paragraph.&lt;/p&gt;
&lt;a href="about.html"&gt;Learn more about me&lt;/a&gt;
</code></pre>
  </section>

  <section>
    <h2>Next Steps</h2>
    <p>In <a href="lesson3.html">Lesson 3</a>, we’ll explore CSS and how to style your HTML pages.</p>
  </section>
</main>

<footer>
  <p>© 2025 Malone University. Building the future, on our own terms.</p>
  <p>
    <a href="https://twitter.com/MaloneGlobal" target="_blank">Twitter</a> |
    <a href="https://facebook.com/YOUR_HANDLE" target="_blank">Facebook</a> |
    <a href="https://instagram.com/maloneglobaluniversity" target="_blank">Instagram</a> |
    <a href="/static/terms.html">Terms</a> |
    <a href="/static/contact.html">Contact</a>
  </p>
</footer>

</body>
</html>
lesson3.html – Working with CSS
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Lesson 3 – Working with CSS</title>
<link rel="icon" href="/images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../../../css/mgu.css" />
<style>
  pre, code {
    font-family: monospace;
    background: #f5f5f5;
    padding: 8px;
    border-radius: 6px;
    display: block;
    overflow-x: auto;
  }
</style>
</head>
<body>

<nav class="navbar">
  <div class="logo-container">
    <img src="/images/android-chrome-512x512.png" alt="Malone University Logo" class="logo-img" />
    <span class="school-name">Malone University</span>
  </div>
  <button class="hamburger" aria-label="Toggle menu">☰</button>
  <ul class="nav-links">
    <li><a href="/">Home</a></li>
    <li><a href="/static/catalog.html">Catalog</a></li>
    <li><a href="/static/contact.html">Contact</a></li>
    <li><a href="/static/jm.html">Founder</a></li>
    <li><a href="/static/mission.html">Mission</a></li>
  </ul>
</nav>

<header class="hero">
  <h1>Lesson 3: Working with CSS</h1>
</header>

<main>
  <section>
    <h2>What is CSS?</h2>
    <p>
      CSS stands for <strong>Cascading Style Sheets</strong>. It controls the appearance of your web 
      pages, including colors, fonts, spacing, and layout.
    </p>
  </section>

  <section>
    <h2>Example</h2>
<pre><code>h1 {
  color: blue;
  font-family: Arial, sans-serif;
}
p {
  font-size: 16px;
  line-height: 1.5;
}
</code></pre>
    <p>This CSS will make all <code>&lt;h1&gt;</code> headings blue and set the font style.</p>
  </section>

  <section>
    <h2>How to Add CSS</h2>
    <ul>
      <li><strong>Inline</strong> – Inside the HTML element using the <code>style</code> attribute.</li>
      <li><strong>Internal</strong> – Inside a <code>&lt;style&gt;</code> tag in the HTML file.</li>
      <li><strong>External</strong> – In a separate <code>.css</code> file linked in the HTML head.</li>
    </ul>
  </section>

  <section>
    <h2>Next Steps</h2>
    <p>In <a href="lesson4.html">Lesson 4</a>, we’ll learn how to add images and links to your site.</p>
  </section>
</main>

<footer>
  <p>© 2025 Malone University. Building the future, on our own terms.</p>
  <p>
    <a href="https://twitter.com/MaloneGlobal" target="_blank">Twitter</a> |
    <a href="https://facebook.com/YOUR_HANDLE" target="_blank">Facebook</a> |
    <a href="https://instagram.com/maloneglobaluniversity" target="_blank">Instagram</a> |
    <a href="/static/terms.html">Terms</a> |
    <a href="/static/contact.html">Contact</a>
  </p>
</footer>

</body>
</html>
lesson4.html – Adding Images and Links
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Lesson 4 – Adding Images and Links</title>
<link rel="icon" href="/images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../../../css/mgu.css" />
<style>
  pre, code {
    font-family: monospace;
    background: #f5f5f5;
    padding: 8px;
    border-radius: 6px;
    display: block;
    overflow-x: auto;
  }
</style>
</head>
<body>

<nav class="navbar">
  <div class="logo-container">
    <img src="/images/android-chrome-512x512.png" alt="Malone University Logo" class="logo-img" />
    <span class="school-name">Malone University</span>
  </div>
  <button class="hamburger" aria-label="Toggle menu">☰</button>
  <ul class="nav-links">
    <li><a href="/">Home</a></li>
    <li><a href="/static/catalog.html">Catalog</a></li>
    <li><a href="/static/contact.html">Contact</a></li>
    <li><a href="/static/jm.html">Founder</a></li>
    <li><a href="/static/mission.html">Mission</a></li>
  </ul>
</nav>

<header class="hero">
  <h1>Lesson 4: Adding Images and Links</h1>
</header>

<main>
  <section>
    <h2>Images</h2>
    <p>
      Use the <code>&lt;img&gt;</code> tag to add images. Always include an <code>alt</code> attribute for accessibility.
    </p>
<pre><code>&lt;img src="photo.jpg" alt="Description of photo"&gt;
</code></pre>
  </section>

  <section>
    <h2>Links</h2>
    <p>
      Use the <code>&lt;a&gt;</code> tag to create hyperlinks to other pages or websites.
    </p>
<pre><code>&lt;a href="https://example.com"&gt;Visit Example&lt;/a&gt;
</code></pre>
  </section>

  <section>
    <h2>Next Steps</h2>
    <p>In <a href="lesson5.html">Lesson 5</a>, we’ll learn how to structure a multi-page website.</p>
  </section>
</main>

<footer>
  <p>© 2025 Malone University. Building the future, on our own terms.</p>
  <p>
    <a href="https://twitter.com/MaloneGlobal" target="_blank">Twitter</a> |
    <a href="https://facebook.com/YOUR_HANDLE" target="_blank">Facebook</a> |
    <a href="https://instagram.com/maloneglobaluniversity" target="_blank">Instagram</a> |
    <a href="/static/terms.html">Terms</a> |
    <a href="/static/contact.html">Contact</a>
  </p>
</footer>

</body>
</html>
lesson5.html – Structuring a Multi-Page Website
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Lesson 5 – Structuring a Multi-Page Website</title>
<link rel="icon" href="/images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../../../css/mgu.css" />
<style>
  pre, code {
    font-family: monospace;
    background: #f5f5f5;
    padding: 8px;
    border-radius: 6px;
    display: block;
    overflow-x: auto;
  }
</style>
</head>
<body>

<nav class="navbar">
  <div class="logo-container">
    <img src="/images/android-chrome-512x512.png" alt="Malone University Logo" class="logo-img" />
    <span class="school-name">Malone University</span>
  </div>
  <button class="hamburger" aria-label="Toggle menu">☰</button>
  <ul class="nav-links">
    <li><a href="/">Home</a></li>
    <li><a href="/static/catalog.html">Catalog</a></li>
    <li><a href="/static/contact.html">Contact</a></li>
    <li><a href="/static/jm.html">Founder</a></li>
    <li><a href="/static/mission.html">Mission</a></li>
  </ul>
</nav>

<header class="hero">
  <h1>Lesson 5: Structuring a Multi-Page Website</h1>
</header>

<main>
  <section>
    <h2>Folder Structure</h2>
    <p>
      Organize your files into folders so your project is easy to navigate.
    </p>
<pre><code>my-website/
  index.html
  about.html
  contact.html
  css/
    style.css
  images/
    logo.png
</code></pre>
  </section>

  <section>
    <h2>Navigation</h2>
    <p>
      Use a consistent navigation bar on every page so visitors can move around easily.
    </p>
<pre><code>&lt;nav&gt;
  &lt;a href="index.html"&gt;Home&lt;/a&gt;
  &lt;a href="about.html"&gt;About&lt;/a&gt;
  &lt;a href="contact.html"&gt;Contact&lt;/a&gt;
&lt;/nav&gt;
</code></pre>
  </section>

  <section>
    <h2>Next Steps</h2>
    <p>This completes the beginner hobbyist series. From here, you can explore more advanced topics like JavaScript, responsive design, and hosting your site online.</p>
  </section>
</main>

<footer>
  <p>© 2025 Malone University. Building the future, on our own terms.</p>
  <p>
    <a href="https://twitter.com/MaloneGlobal" target="_blank">Twitter</a> |
    <a href="https://facebook.com/YOUR_HANDLE" target="_blank">Facebook</a> |
    <a href="https://instagram.com/maloneglobaluniversity" target="_blank">Instagram</a> |
    <a href="/static/terms.html">Terms</a> |
    <a href="/static/contact.html">Contact</a>
  </p>
</footer>

</body>
</html>
If you paste these into c://mgu/technology/lesson2.html through lesson5.html,
your hobby.html index page will have working links for the first five lessons.

If you want, I can also make lesson6–lesson10 in one go so the series feels “complete” from day one. That way you don’t have to keep adding them piecemeal.

You said:
yes please
ChatGPT said:
Alright — I’ll give you Lesson 2 through Lesson 10 for your Building a Website hobby series in one go so you can paste them into your c://mgu/technology/ folder.
They’ll follow the same clean structure as Lesson 1, just with progressing topics.

Lesson 2 – HTML Text Elements
File: lesson2.html

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Lesson 2 – HTML Text Elements</title>
<link rel="stylesheet" href="../../../css/mgu.css" />
</head>
<body>
<header class="hero"><h1>Lesson 2: HTML Text Elements</h1></header>
<main>
<section>
<h2>Headings</h2>
<p>HTML has six heading levels: <code>&lt;h1&gt;</code> through <code>&lt;h6&gt;</code>.</p>
<pre><code>&lt;h1&gt;Main Title&lt;/h1&gt;
&lt;h2&gt;Section&lt;/h2&gt;
&lt;h3&gt;Subsection&lt;/h3&gt;
</code></pre>
</section>
<section>
<h2>Paragraphs & Line Breaks</h2>
<pre><code>&lt;p&gt;This is a paragraph.&lt;/p&gt;
&lt;p&gt;Another paragraph.&lt;/p&gt;
&lt;p&gt;Line one.&lt;br&gt;Line two.&lt;/p&gt;
</code></pre>
</section>
<section>
<h2>Emphasis</h2>
<pre><code>&lt;strong&gt;Bold text&lt;/strong&gt;
&lt;em&gt;Italic text&lt;/em&gt;
</code></pre>
</section>
<p>Next: <a href="lesson3.html">Lists in HTML</a></p>
</main>
</body>
</html>
Lesson 3 – Lists in HTML
File: lesson3.html

<!DOCTYPE html>
<html lang="en">
<head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Lesson 3 – Lists in HTML</title>
<link rel="stylesheet" href="../../../css/mgu.css">
</head>
<body>
<header class="hero"><h1>Lesson 3: Lists in HTML</h1></header>
<main>
<section>
<h2>Unordered Lists</h2>
<pre><code>&lt;ul&gt;
  &lt;li&gt;Item 1&lt;/li&gt;
  &lt;li&gt;Item 2&lt;/li&gt;
&lt;/ul&gt;
</code></pre>
</section>
<section>
<h2>Ordered Lists</h2>
<pre><code>&lt;ol&gt;
  &lt;li&gt;First&lt;/li&gt;
  &lt;li&gt;Second&lt;/li&gt;
&lt;/ol&gt;
</code></pre>
</section>
<section>
<h2>Description Lists</h2>
<pre><code>&lt;dl&gt;
  &lt;dt&gt;HTML&lt;/dt&gt;
  &lt;dd&gt;HyperText Markup Language&lt;/dd&gt;
&lt;/dl&gt;
</code></pre>
</section>
<p>Next: <a href="lesson4.html">Links & Images</a></p>
</main>
</body>
</html>
Lesson 4 – Links & Images
File: lesson4.html

<!DOCTYPE html>
<html lang="en">
<head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Lesson 4 – Links & Images</title>
<link rel="stylesheet" href="../../../css/mgu.css">
</head>
<body>
<header class="hero"><h1>Lesson 4: Links & Images</h1></header>
<main>
<section>
<h2>Links</h2>
<pre><code>&lt;a href="https://example.com"&gt;Visit Example&lt;/a&gt;
</code></pre>
</section>
<section>
<h2>Images</h2>
<pre><code>&lt;img src="photo.jpg" alt="Description"&gt;
</code></pre>
</section>
<p>Next: <a href="lesson5.html">HTML Structure & Layout</a></p>
</main>
</body>
</html>
Lesson 5 – HTML Structure & Layout
File: lesson5.html

<!DOCTYPE html>
<html lang="en">
<head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Lesson 5 – HTML Structure & Layout</title>
<link rel="stylesheet" href="../../../css/mgu.css">
</head>
<body>
<header class="hero"><h1>Lesson 5: HTML Structure & Layout</h1></header>
<main>
<section>
<h2>Common Structure</h2>
<pre><code>&lt;header&gt;...&lt;/header&gt;
&lt;nav&gt;...&lt;/nav&gt;
&lt;main&gt;...&lt;/main&gt;
&lt;footer&gt;...&lt;/footer&gt;
</code></pre>
</section>
<section>
<h2>Sections & Articles</h2>
<pre><code>&lt;section&gt;A themed area&lt;/section&gt;
&lt;article&gt;An independent piece&lt;/article&gt;
</code></pre>
</section>
<p>Next: <a href="lesson6.html">CSS Basics</a></p>
</main>
</body>
</html>
Lesson 6 – CSS Basics
File: lesson6.html

<!DOCTYPE html>
<html lang="en">
<head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Lesson 6 – CSS Basics</title>
<link rel="stylesheet" href="../../../css/mgu.css">
</head>
<body>
<header class="hero"><h1>Lesson 6: CSS Basics</h1></header>
<main>
<section>
<h2>Inline CSS</h2>
<pre><code>&lt;p style="color: red;"&gt;Hello&lt;/p&gt;
</code></pre>
</section>
<section>
<h2>Internal CSS</h2>
<pre><code>&lt;style&gt;
  p { color: blue; }
&lt;/style&gt;
</code></pre>
</section>
<section>
<h2>External CSS</h2>
<pre><code>&lt;link rel="stylesheet" href="style.css"&gt;
</code></pre>
</section>
<p>Next: <a href="lesson7.html">CSS Selectors</a></p>
</main>
</body>
</html>
Lesson 7 – CSS Selectors
File: lesson7.html

<!DOCTYPE html>
<html lang="en">
<head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Lesson 7 – CSS Selectors</title>
<link rel="stylesheet" href="../../../css/mgu.css">
</head>
<body>
<header class="hero"><h1>Lesson 7: CSS Selectors</h1></header>
<main>
<section>
<h2>Basic Selectors</h2>
<pre><code>p { color: green; }
#idName { font-size: 20px; }
.className { font-weight: bold; }
</code></pre>
</section>
<section>
<h2>Combinators</h2>
<pre><code>div p { color: red; }
div > p { color: blue; }
</code></pre>
</section>
<p>Next: <a href="lesson8.html">CSS Colors & Fonts</a></p>
</main>
</body>
</html>
Lesson 8 – CSS Colors & Fonts
File: lesson8.html

<!DOCTYPE html>
<html lang="en">
<head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Lesson 8 – CSS Colors & Fonts</title>
<link rel="stylesheet" href="../../../css/mgu.css">
</head>
<body>
<header class="hero"><h1>Lesson 8: CSS Colors & Fonts</h1></header>
<main>
<section>
<h2>Colors</h2>
<pre><code>p { color: red; }
p { color: #ff0000; }
p { color: rgb(255,0,0); }
</code></pre>
</section>
<section>
<h2>Fonts</h2>
<pre><code>p { font-family: Arial, sans-serif; }
p { font-size: 18px; }
</code></pre>
</section>
<p>Next: <a href="lesson9.html">CSS Box Model</a></p>
</main>
</body>
</html>
Lesson 9 – CSS Box Model
File: lesson9.html

<!DOCTYPE html>
<html lang="en">
<head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Lesson 9 – CSS Box Model</title>
<link rel="stylesheet" href="../../../css/mgu.css">
</head>
<body>
<header class="hero"><h1>Lesson 9: CSS Box Model</h1></header>
<main>
<section>
<h2>Box Model Parts</h2>
<pre><code>div {
  margin: 10px;
  border: 2px solid black;
  padding: 10px;
  width: 200px;
}
</code></pre>
</section>
<p>Next: <a href="lesson10.html">Publishing Your Website</a></p>
</main>
</body>
</html>
Lesson 10 – Publishing Your Website
File: lesson10.html

<!DOCTYPE html>
<html lang="en">
<head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Lesson 10 – Publishing Your Website</title>
<link rel="stylesheet" href="../../../css/mgu.css">
</head>
<body>
<header class="hero"><h1>Lesson 10: Publishing Your Website</h1></header>
<main>
<section>
<h2>Steps to Publish</h2>
<ol>
  <li>Save all your files in one folder.</li>
  <li>Test your site in your browser.</li>
  <li>Upload files to a web hosting service.</li>
  <li>Share your link with the world!</li>
</ol>
</section>
<section>
<h2>Free Hosting Options</h2>
<ul>
  <li>GitHub Pages</li>
  <li>Netlify</li>
  <li>Vercel</li>
</ul>
</section>
<p>End of course. Return to <a href="hobby.html">Building a Website Index</a>.</p>
</main>
</body>
</html>
If you want, I can also give you a ready-to-go hobby.html index page that links to all 10 lessons in this series with a nice styled table of contents. That way students can jump around without clicking “Next” repeatedly.

Do you want me to make that index?

You said:
yes
ChatGPT said:
Got it — I’ll build Lesson 2 through Lesson 10 for your Building a Website hobbyist series so they’re ready to drop into c://mgu/technology/.

They will match Lesson 1’s style, link to each other for navigation, and cover a logical beginner-friendly progression:

Lesson 2 – HTML Basics
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Lesson 2 – HTML Basics</title>
<link rel="stylesheet" href="../../../css/mgu.css" />
</head>
<body>
<header class="hero">
  <h1>Lesson 2: HTML Basics</h1>
</header>
<main>
  <section>
    <h2>Headings and Paragraphs</h2>
    <p>HTML headings range from <code>&lt;h1&gt;</code> (largest) to <code>&lt;h6&gt;</code> (smallest). Paragraphs are wrapped in <code>&lt;p&gt;</code> tags.</p>
<pre><code>&lt;h1&gt;This is a Heading&lt;/h1&gt;
&lt;p&gt;This is a paragraph.&lt;/p&gt;
</code></pre>
  </section>
  <section>
    <h2>Lists</h2>
    <p>Ordered lists (<code>&lt;ol&gt;</code>) are numbered, unordered lists (<code>&lt;ul&gt;</code>) are bulleted.</p>
<pre><code>&lt;ol&gt;
  &lt;li&gt;First&lt;/li&gt;
  &lt;li&gt;Second&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;Item&lt;/li&gt;
  &lt;li&gt;Another Item&lt;/li&gt;
&lt;/ul&gt;
</code></pre>
  </section>
  <section>
    <p><a href="lesson1.html">← Previous</a> | <a href="lesson3.html">Next →</a></p>
  </section>
</main>
</body>
</html>
Lesson 3 – Adding Images & Links
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Lesson 3 – Adding Images & Links</title>
<link rel="stylesheet" href="../../../css/mgu.css" />
</head>
<body>
<header class="hero">
  <h1>Lesson 3: Adding Images & Links</h1>
</header>
<main>
  <section>
    <h2>Images</h2>
<pre><code>&lt;img src="image.jpg" alt="Description of image" width="300"&gt;
</code></pre>
  </section>
  <section>
    <h2>Links</h2>
<pre><code>&lt;a href="https://example.com"&gt;Visit Example&lt;/a&gt;
</code></pre>
  </section>
  <section>
    <p><a href="lesson2.html">← Previous</a> | <a href="lesson4.html">Next →</a></p>
  </section>
</main>
</body>
</html>
Lesson 4 – Introduction to CSS
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Lesson 4 – Introduction to CSS</title>
<link rel="stylesheet" href="../../../css/mgu.css" />
</head>
<body>
<header class="hero">
  <h1>Lesson 4: Introduction to CSS</h1>
</header>
<main>
  <section>
    <h2>Adding CSS</h2>
<pre><code>&lt;style&gt;
body {
  background-color: lightblue;
}
&lt;/style&gt;
</code></pre>
  </section>
  <section>
    <h2>External Stylesheets</h2>
<pre><code>&lt;link rel="stylesheet" href="styles.css"&gt;
</code></pre>
  </section>
  <section>
    <p><a href="lesson3.html">← Previous</a> | <a href="lesson5.html">Next →</a></p>
  </section>
</main>
</body>
</html>
Lesson 5 – Colors & Fonts
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Lesson 5 – Colors & Fonts</title>
<link rel="stylesheet" href="../../../css/mgu.css" />
</head>
<body>
<header class="hero">
  <h1>Lesson 5: Colors & Fonts</h1>
</header>
<main>
  <section>
<pre><code>h1 {
  color: red;
  font-family: Arial, sans-serif;
}
</code></pre>
  </section>
  <section>
    <p><a href="lesson4.html">← Previous</a> | <a href="lesson6.html">Next →</a></p>
  </section>
</main>
</body>
</html>
Lesson 6 – Page Layout
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Lesson 6 – Page Layout</title>
<link rel="stylesheet" href="../../../css/mgu.css" />
</head>
<body>
<header class="hero">
  <h1>Lesson 6: Page Layout</h1>
</header>
<main>
  <section>
<pre><code>header, nav, main, footer {
  padding: 20px;
}
</code></pre>
  </section>
  <section>
    <p><a href="lesson5.html">← Previous</a> | <a href="lesson7.html">Next →</a></p>
  </section>
</main>
</body>
</html>
Lesson 7 – Responsive Design
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Lesson 7 – Responsive Design</title>
<link rel="stylesheet" href="../../../css/mgu.css" />
</head>
<body>
<header class="hero">
  <h1>Lesson 7: Responsive Design</h1>
</header>
<main>
  <section>
<pre><code>@media (max-width: 600px) {
  body {
    background-color: lightyellow;
  }
}
</code></pre>
  </section>
  <section>
    <p><a href="lesson6.html">← Previous</a> | <a href="lesson8.html">Next →</a></p>
  </section>
</main>
</body>
</html>
Lesson 8 – Introduction to JavaScript
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Lesson 8 – Introduction to JavaScript</title>
<link rel="stylesheet" href="../../../css/mgu.css" />
</head>
<body>
<header class="hero">
  <h1>Lesson 8: Introduction to JavaScript</h1>
</header>
<main>
  <section>
<pre><code>&lt;script&gt;
  alert("Hello, world!");
&lt;/script&gt;
</code></pre>
  </section>
  <section>
    <p><a href="lesson7.html">← Previous</a> | <a href="lesson9.html">Next →</a></p>
  </section>
</main>
</body>
</html>
Lesson 9 – Event Handling
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Lesson 9 – Event Handling</title>
<link rel="stylesheet" href="../../../css/mgu.css" />
</head>
<body>
<header class="hero">
  <h1>Lesson 9: Event Handling</h1>
</header>
<main>
  <section>
<pre><code>&lt;button onclick="alert('Button clicked!')"&gt;Click Me&lt;/button&gt;
</code></pre>
  </section>
  <section>
    <p><a href="lesson8.html">← Previous</a> | <a href="lesson10.html">Next →</a></p>
  </section>
</main>
</body>
</html>
Lesson 10 – Putting It All Together
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Lesson 10 – Putting It All Together</title>
<link rel="stylesheet" href="../../../css/mgu.css" />
</head>
<body>
<header class="hero">
  <h1>Lesson 10: Putting It All Together</h1>
</header>
<main>
  <section>
    <p>Now that you know HTML, CSS, and basic JavaScript, try building your first complete web page from scratch.</p>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;My Website&lt;/title&gt;
  &lt;link rel="stylesheet" href="styles.css"&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Welcome to My Site&lt;/h1&gt;
  &lt;p&gt;This is my first project.&lt;/p&gt;
  &lt;script src="script.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
  </section>
  <section>
    <p><a href="lesson9.html">← Previous</a> | <a href="hobby.html">Back to Index</a></p>
  </section>
</main>
</body>
</html>
If you want, I can also build you a single “hobby.html” index that links to all these lessons in order so the whole Building a Website course is ready in one shot. That would make your copy-paste even faster.

Do you want me to make that index now?

You said:
 build you a single “hobby.html” index 
ChatGPT said:

Thought for 9s
Here’s a clean, ready-to-paste c://mgu/technology/hobby.html that indexes Lessons 1–10 for your “Building a Website – Hobbyist Series”.

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Building a Website – Hobbyist Series (Index)</title>
<link rel="icon" href="/images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../../../css/mgu.css" />
<style>
  /* Page-specific tweaks */
  .intro { max-width: 80ch; margin: 0 auto 2rem; }
  .toc {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
    gap: 1rem;
    list-style: none;
    padding: 0;
    margin: 0 0 2rem;
  }
  .card {
    border: 1px solid rgba(0,0,0,.08);
    border-radius: 12px;
    padding: 1rem 1.25rem;
    background: var(--card-bg, #fff);
    box-shadow: 0 1px 3px rgba(0,0,0,.06);
  }
  .card h3 {
    margin: 0 0 .5rem;
    font-size: 1.1rem;
    line-height: 1.3;
  }
  .card p { margin: 0 0 .75rem; }
  .card a {
    display: inline-block;
    text-decoration: none;
    font-weight: 600;
  }
  .btn {
    border: 1px solid rgba(0,0,0,.12);
    padding: .5rem .75rem;
    border-radius: .65rem;
  }
  .actions {
    display: flex;
    gap: .75rem;
    flex-wrap: wrap;
    justify-content: center;
    margin-top: 1rem;
  }
</style>
</head>
<body>

<nav class="navbar">
  <div class="logo-container">
    <img src="/images/android-chrome-512x512.png" alt="Malone University Logo" class="logo-img" />
    <span class="school-name">Malone University</span>
  </div>
  <button class="hamburger" aria-label="Toggle menu">☰</button>
  <ul class="nav-links">
    <li><a href="/">Home</a></li>
    <li><a href="/static/catalog.html">Catalog</a></li>
    <li><a href="/static/contact.html">Contact</a></li>
    <li><a href="/static/jm.html">Founder</a></li>
    <li><a href="/static/mission.html">Mission</a></li>
    <li><a href="/static/hardened.html">FINAL OFFER</a></li>
  </ul>
</nav>

<header class="hero">
  <h1>Building a Website – Hobbyist Series</h1>
  <p>Index & quick navigation for Lessons 1–10</p>
</header>

<main>
  <section class="intro">
    <h2>About this series</h2>
    <p>
      Start from zero and build your first website step-by-step. You’ll learn HTML for structure,
      CSS for styling, and a touch of JavaScript for interactivity. Each lesson is short, focused,
      and includes simple code you can copy, paste, and tweak.
    </p>
    <div class="actions" aria-label="Primary actions">
      <a class="btn" href="lesson1.html">Start Lesson 1</a>
      <a class="btn" href="#toc">Browse all lessons</a>
    </div>
  </section>

  <section id="toc" aria-labelledby="toc-title">
    <h2 id="toc-title">Table of Contents</h2>
    <ul class="toc">
      <li class="card">
        <h3><a href="lesson1.html">Lesson 1 — Introduction to Building Websites</a></h3>
        <p>What a website is, tools you need, and the smallest valid HTML page.</p>
        <a class="btn" href="lesson1.html" aria-label="Open Lesson 1">Open</a>
      </li>
      <li class="card">
        <h3><a href="lesson2.html">Lesson 2 — HTML Basics / Text Elements</a></h3>
        <p>Headings, paragraphs, line breaks, emphasis, and semantic text.</p>
        <a class="btn" href="lesson2.html" aria-label="Open Lesson 2">Open</a>
      </li>
      <li class="card">
        <h3><a href="lesson3.html">Lesson 3 — Lists in HTML</a></h3>
        <p>Unordered, ordered, and description lists for clean content structure.</p>
        <a class="btn" href="lesson3.html" aria-label="Open Lesson 3">Open</a>
      </li>
      <li class="card">
        <h3><a href="lesson4.html">Lesson 4 — Links & Images</a></h3>
        <p>Create hyperlinks and add accessible images with proper <code>alt</code> text.</p>
        <a class="btn" href="lesson4.html" aria-label="Open Lesson 4">Open</a>
      </li>
      <li class="card">
        <h3><a href="lesson5.html">Lesson 5 — HTML Structure & Layout</a></h3>
        <p>Header, nav, main, footer; sections and articles; multi-page site structure.</p>
        <a class="btn" href="lesson5.html" aria-label="Open Lesson 5">Open</a>
      </li>
      <li class="card">
        <h3><a href="lesson6.html">Lesson 6 — CSS Basics</a></h3>
        <p>Inline, internal, and external styles; where CSS lives and why it matters.</p>
        <a class="btn" href="lesson6.html" aria-label="Open Lesson 6">Open</a>
      </li>
      <li class="card">
        <h3><a href="lesson7.html">Lesson 7 — CSS Selectors</a></h3>
        <p>Element, class, ID, and combinators to target exactly what you want to style.</p>
        <a class="btn" href="lesson7.html" aria-label="Open Lesson 7">Open</a>
      </li>
      <li class="card">
        <h3><a href="lesson8.html">Lesson 8 — Colors & Fonts</a></h3>
        <p>Color formats (names, hex, RGB) and typography basics for readable pages.</p>
        <a class="btn" href="lesson8.html" aria-label="Open Lesson 8">Open</a>
      </li>
      <li class="card">
        <h3><a href="lesson9.html">Lesson 9 — CSS Box Model</a></h3>
        <p>Padding, border, margin, and width—how spacing actually works.</p>
        <a class="btn" href="lesson9.html" aria-label="Open Lesson 9">Open</a>
      </li>
      <li class="card">
        <h3><a href="lesson10.html">Lesson 10 — Publishing / Putting It All Together</a></h3>
        <p>Finalize your pages and get them online with simple hosting options.</p>
        <a class="btn" href="lesson10.html" aria-label="Open Lesson 10">Open</a>
      </li>
    </ul>
  </section>

  <section aria-labelledby="resources-title">
    <h2 id="resources-title">Helpful resources</h2>
    <ul>
      <li><a href="/static/catalog.html">Browse the full catalog</a></li>
      <li><a href="/static/contact.html">Contact the instructor</a></li>
      <li><a href="/">Return to site home</a></li>
    </ul>
  </section>
</main>

<footer>
  <p>© 2025 Malone University. Building the future, on our own terms.</p>
  <p>
    <a href="https://twitter.com/MaloneGlobal" target="_blank" rel="noopener noreferrer">Twitter</a> |
    <a href="https://facebook.com/YOUR_HANDLE" target="_blank" rel="noopener noreferrer">Facebook</a> |
    <a href="https://instagram.com/maloneglobaluniversity" target="_blank" rel="noopener noreferrer">Instagram</a> |
    <a href="/static/terms.html">Terms</a> |
    <a href="/static/contact.html">Contact</a>
  </p>
</footer>

</body>
</html>
Paste this into c://mgu/technology/hobby.html and you’re set.