Skip to content
Chat history

You said:
separate css into a file called mgu; js into a file called main: <!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Dark Mode Sample — One Page</title>

  <style>
    /* -------------------------
       Theme variables (light)
       ------------------------- */
    :root{
      --bg: #f6f7fb;
      --card: #ffffff;
      --muted: #546070;
      --text: #0b1320;
      --accent: #4f46e5;
      --accent-weak: rgba(79,70,229,0.12);
      --glass: rgba(255,255,255,0.6);
      --radius: 12px;
      --shadow: 0 6px 18px rgba(15,23,42,0.06);
      --code-bg: #f3f4f6;
    }

    /* -------------------------
       Dark mode overrides
       ------------------------- */
    .dark, .dark-mode {
      --bg: #0b1020;
      --card: linear-gradient(180deg, rgba(255,255,255,0.02), rgba(255,255,255,0.01));
      --muted: #9aa3b2;
      --text: #e6eef6;
      --accent: #7c5cff;
      --accent-weak: rgba(124,92,255,0.12);
      --glass: rgba(255,255,255,0.03);
      --radius: 12px;
      --shadow: 0 8px 24px rgba(2,6,23,0.6);
      --code-bg: rgba(255,255,255,0.04);
    }

    /* If user has a system preference, use that initially */
    @media (prefers-color-scheme: dark){
      :root:not(.light):not(.light-mode) {
        /* nothing — styles will use .dark when JS is present; this keeps CSS predictable */
      }
    }

    /* -------------------------
       Base layout
       ------------------------- */
    *{box-sizing:border-box}
    html,body{height:100%}
    body{
      margin:0;
      font-family: Inter, ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
      background: radial-gradient(1200px 400px at 10% 10%, rgba(79,70,229,0.06), transparent),
                  radial-gradient(800px 300px at 90% 90%, rgba(16,185,129,0.03), transparent),
                  var(--bg);
      color:var(--text);
      -webkit-font-smoothing:antialiased;
      -moz-osx-font-smoothing:grayscale;
      line-height:1.45;
      padding:28px;
    }

    .container{
      max-width:1100px;
      margin:0 auto;
    }

    header{
      display:flex;
      align-items:center;
      justify-content:space-between;
      gap:16px;
      margin-bottom:28px;
    }

    .brand{
      display:flex;
      gap:12px;
      align-items:center;
      text-decoration:none;
      color:inherit;
    }

    .logo{
      width:44px;
      height:44px;
      display:inline-grid;
      place-items:center;
      border-radius:10px;
      background:linear-gradient(135deg,var(--accent), #3b82f6 60%);
      box-shadow:var(--shadow);
      color:white;
      font-weight:700;
      font-size:18px;
    }

    h1{
      margin:0;
      font-size:20px;
      letter-spacing:-0.2px;
    }
    p.lead{
      margin:6px 0 0 0;
      color:var(--muted);
      font-size:14px;
    }

    /* -------------------------
       Toggle button
       ------------------------- */
    .theme-toggle{
      border:0;
      background:var(--glass);
      backdrop-filter: blur(6px);
      padding:8px;
      border-radius:999px;
      display:inline-flex;
      gap:8px;
      align-items:center;
      cursor:pointer;
      box-shadow:var(--shadow);
    }
    .theme-toggle:focus{outline:3px solid var(--accent-weak); outline-offset:3px}

    .toggle-icon{
      width:20px; height:20px;
      display:inline-block;
    }

    /* -------------------------
       Hero / cards
       ------------------------- */
    .hero{
      display:grid;
      grid-template-columns: 1fr 320px;
      gap:18px;
      align-items:start;
      margin-bottom:28px;
    }

    .card{
      background:var(--card);
      border-radius:var(--radius);
      padding:18px;
      box-shadow:var(--shadow);
      border:1px solid rgba(255,255,255,0.02);
    }

    .intro h2{ margin:0 0 8px 0; font-size:28px }
    .intro p{ margin:0; color:var(--muted) }

    .actions{ margin-top:14px; display:flex; gap:8px; flex-wrap:wrap }
    .btn{
      padding:10px 14px;
      border-radius:10px;
      border:0;
      cursor:pointer;
      font-weight:600;
      background:linear-gradient(180deg,var(--accent), #5b45ff);
      color:white;
      box-shadow: 0 8px 18px rgba(79,70,229,0.18);
    }
    .btn.ghost{
      background:transparent;
      color:var(--text);
      border:1px solid rgba(255,255,255,0.04);
      box-shadow:none;
    }

    /* features grid */
    .features{
      margin-top:18px;
      display:grid;
      grid-template-columns:repeat(2,1fr);
      gap:12px;
    }
    .feature{
      padding:12px;
      border-radius:10px;
      background:linear-gradient(180deg, rgba(255,255,255,0.02), transparent);
      border:1px solid rgba(255,255,255,0.02);
    }
    .feature h3{ margin:0 0 8px 0; font-size:15px }
    .feature p{ margin:0; color:var(--muted); font-size:13px }

    /* code sample */
    pre code{
      display:block;
      padding:12px;
      border-radius:8px;
      background:var(--code-bg);
      overflow:auto;
      font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, "Roboto Mono", monospace;
      font-size:13px;
      color:inherit;
    }

    footer{
      margin-top:28px;
      text-align:center;
      color:var(--muted);
      font-size:13px;
    }

    /* small screens */
    @media (max-width:880px){
      .hero{ grid-template-columns: 1fr; }
      .features{ grid-template-columns:1fr }
      body{ padding:18px }
    }
  </style>
</head>
<body>
  <div class="container">
    <header role="banner">
      <a class="brand" href="#" aria-label="Homepage">
        <span class="logo" aria-hidden="true">MU</span>
        <div>
          <h1>Malone University</h1>
          <p class="lead">Sample dark-mode one-page demo</p>
        </div>
      </a>

      <!-- Accessible theme toggle -->
      <button id="theme-toggle" class="theme-toggle" aria-label="Toggle color theme" aria-pressed="false" title="Toggle dark / light">
        <svg class="toggle-icon" id="icon-sun" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
          <path d="M12 3v2M12 19v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
          <circle cx="12" cy="12" r="3" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        <svg class="toggle-icon" id="icon-moon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" style="display:none">
          <path d="M21 12.79A9 9 0 1111.21 3 7 7 0 0021 12.79z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </header>

    <main>
      <section class="hero">
        <div class="card intro" aria-labelledby="welcome-title">
          <h2 id="welcome-title">Beautiful dark mode, accessible & persistent</h2>
          <p class="lead">This page demonstrates a practical dark-mode setup using CSS variables, an accessible toggle, and localStorage to remember the user's choice.</p>

          <div class="actions" role="toolbar" aria-label="Sample actions">
            <button class="btn">Get started</button>
            <button class="btn ghost">Learn more</button>
          </div>

          <div class="features" aria-hidden="false">
            <div class="feature">
              <h3>Respects system theme</h3>
              <p>Defaults to your OS preference, but user selection persists.</p>
            </div>
            <div class="feature">
              <h3>Accessible toggle</h3>
              <p>Keyboard-focusable, ARIA aria-pressed and visible focus ring.</p>
            </div>
            <div class="feature">
              <h3>Easy to customize</h3>
              <p>Tweak CSS variables at the top to change colors quickly.</p>
            </div>
            <div class="feature">
              <h3>Responsive</h3>
              <p>Designed to look good on phone, tablet, and desktop.</p>
            </div>
          </div>

          <h3 style="margin-top:16px">Tiny code sample</h3>
          <pre><code>&lt;script&gt;
// read stored theme, apply to &lt;html&gt;:
// localStorage.setItem('site-theme', 'dark' | 'light' | null)
&lt;/script&gt;</code></pre>
        </div>

        <aside class="card" aria-label="Quick settings">
          <h3 style="margin-top:0">Quick settings</h3>
          <p style="color:var(--muted)">Current theme is shown by the toggle — press it to switch themes. Your choice will be remembered.</p>

          <div style="margin-top:16px">
            <strong>Theme:</strong> <span id="theme-label">—</span>
          </div>

          <hr style="margin:14px 0;border:0;border-top:1px solid rgba(255,255,255,0.03)">

          <div>
            <h4 style="margin:8px 0">Example code</h4>
            <pre><code>&lt;html class="dark"&gt; &lt;!-- or remove to use light --&gt;</code></pre>
          </div>
        </aside>
      </section>
    </main>

    <footer>
      Built with care · Dark-mode demo · Accessible toggle
    </footer>
  </div>

  <script>
    (function () {
      const storageKey = 'site-theme'; // values: "dark", "light", null
      const html = document.documentElement;
      const toggle = document.getElementById('theme-toggle');
      const iconSun = document.getElementById('icon-sun');
      const iconMoon = document.getElementById('icon-moon');
      const label = document.getElementById('theme-label');

      // Apply theme early if saved to avoid FOUC (flash of unthemed content)
      const saved = localStorage.getItem(storageKey);

      function applyTheme(theme) {
        if (theme === 'dark') {
          html.classList.add('dark', 'dark-mode');
          html.classList.remove('light', 'light-mode');
          iconSun.style.display = 'none';
          iconMoon.style.display = 'inline-block';
          toggle.setAttribute('aria-pressed','true');
          label.textContent = 'Dark';
        } else if (theme === 'light') {
          html.classList.add('light', 'light-mode');
          html.classList.remove('dark', 'dark-mode');
          iconSun.style.display = 'inline-block';
          iconMoon.style.display = 'none';
          toggle.setAttribute('aria-pressed','false');
          label.textContent = 'Light';
        } else {
          // remove explicit classes -> fall back to system preference style
          html.classList.remove('dark','light','dark-mode','light-mode');
          // determine via matchMedia
          const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
          if (prefersDark) {
            iconSun.style.display = 'none';
            iconMoon.style.display = 'inline-block';
            label.textContent = 'System (dark)';
          } else {
            iconSun.style.display = 'inline-block';
            iconMoon.style.display = 'none';
            label.textContent = 'System (light)';
          }
          toggle.setAttribute('aria-pressed','false');
        }
      }

      // initialize
      applyTheme(saved);

      // Toggle handler
      toggle.addEventListener('click', () => {
        // Toggle: if saved === 'dark' -> set 'light', if 'light' -> remove (or flip)
        const current = localStorage.getItem(storageKey);
        if (current === 'dark') {
          localStorage.setItem(storageKey, 'light');
          applyTheme('light');
        } else if (current === 'light') {
          localStorage.removeItem(storageKey);
          applyTheme(null);
        } else {
          // no explicit preference -> set dark
          localStorage.setItem(storageKey, 'dark');
          applyTheme('dark');
        }
      });

      // support keyboard toggling via Space/Enter on focused button (button already handles this natively)
      // respond to system preference changes (only if user hasn't chosen)
      if (window.matchMedia) {
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
          const hasSaved = localStorage.getItem(storageKey) !== null;
          if (!hasSaved) applyTheme(null);
        });
      }
    })();
  </script>
<!-- Version: 2025-08-10 11:45 -->
<p style="text-align:center;font-size:0.8rem;color:gray;">
  Build: 2025-08-10 11:45
</p>
ChatGPT said:
Here’s the HTML cleaned up so the CSS is in mgu.css and the JavaScript in main.js.

📄 index.html

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Dark Mode Sample — One Page</title>
  <link rel="stylesheet" href="mgu.css" />
</head>
<body>
  <div class="container">
    <header role="banner">
      <a class="brand" href="#" aria-label="Homepage">
        <span class="logo" aria-hidden="true">MU</span>
        <div>
          <h1>Malone University</h1>
          <p class="lead">Sample dark-mode one-page demo</p>
        </div>
      </a>

      <!-- Accessible theme toggle -->
      <button id="theme-toggle" class="theme-toggle" aria-label="Toggle color theme" aria-pressed="false" title="Toggle dark / light">
        <svg class="toggle-icon" id="icon-sun" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
          <path d="M12 3v2M12 19v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
          <circle cx="12" cy="12" r="3" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        <svg class="toggle-icon" id="icon-moon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" style="display:none">
          <path d="M21 12.79A9 9 0 1111.21 3 7 7 0 0021 12.79z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </header>

    <main>
      <section class="hero">
        <div class="card intro" aria-labelledby="welcome-title">
          <h2 id="welcome-title">Beautiful dark mode, accessible & persistent</h2>
          <p class="lead">This page demonstrates a practical dark-mode setup using CSS variables, an accessible toggle, and <code>localStorage</code> to remember the user's choice.</p>

          <div class="actions" role="toolbar" aria-label="Sample actions">
            <button class="btn">Get started</button>
            <button class="btn ghost">Learn more</button>
          </div>

          <div class="features" aria-hidden="false">
            <div class="feature">
              <h3>Respects system theme</h3>
              <p>Defaults to your OS preference, but user selection persists.</p>
            </div>
            <div class="feature">
              <h3>Accessible toggle</h3>
              <p>Keyboard-focusable, ARIA attributes, and visible focus ring.</p>
            </div>
            <div class="feature">
              <h3>Easy to customize</h3>
              <p>Tweak CSS variables at the top to change colors quickly.</p>
            </div>
            <div class="feature">
              <h3>Responsive</h3>
              <p>Designed to look good on phone, tablet, and desktop.</p>
            </div>
          </div>

          <h3 style="margin-top:16px">Tiny code sample</h3>
          <pre><code>&lt;script&gt;
// read stored theme, apply to &lt;html&gt;:
// localStorage.setItem('site-theme', 'dark' | 'light' | null)
&lt;/script&gt;</code></pre>
        </div>

        <aside class="card" aria-label="Quick settings">
          <h3 style="margin-top:0">Quick settings</h3>
          <p style="color:var(--muted)">Current theme is shown by the toggle — press it to switch themes. Your choice will be remembered.</p>

          <div style="margin-top:16px">
            <strong>Theme:</strong> <span id="theme-label">—</span>
          </div>

          <hr style="margin:14px 0;border:0;border-top:1px solid rgba(255,255,255,0.03)">

          <div>
            <h4 style="margin:8px 0">Example code</h4>
            <pre><code>&lt;html class="dark"&gt; &lt;!-- or remove to use light --&gt;</code></pre>
          </div>
        </aside>
      </section>
    </main>

    <footer>
      Built with care · Dark-mode demo · Accessible toggle
    </footer>
  </div>

  <script src="main.js"></script>
  <!-- Version: 2025-08-10 11:45 -->
  <p style="text-align:center;font-size:0.8rem;color:gray;">
    Build: 2025-08-10 11:45
  </p>
</body>
</html>
📄 mgu.css
(contains all your CSS exactly as written in the <style> block)

/* -------------------------
   Theme variables (light)
   ------------------------- */
:root {
  --bg: #f6f7fb;
  --card: #ffffff;
  --muted: #546070;
  --text: #0b1320;
  --accent: #4f46e5;
  --accent-weak: rgba(79,70,229,0.12);
  --glass: rgba(255,255,255,0.6);
  --radius: 12px;
  --shadow: 0 6px 18px rgba(15,23,42,0.06);
  --code-bg: #f3f4f6;
}

/* -------------------------
   Dark mode overrides
   ------------------------- */
.dark, .dark-mode {
  --bg: #0b1020;
  --card: linear-gradient(180deg, rgba(255,255,255,0.02), rgba(255,255,255,0.01));
  --muted: #9aa3b2;
  --text: #e6eef6;
  --accent: #7c5cff;
  --accent-weak: rgba(124,92,255,0.12);
  --glass: rgba(255,255,255,0.03);
  --radius: 12px;
  --shadow: 0 8px 24px rgba(2,6,23,0.6);
  --code-bg: rgba(255,255,255,0.04);
}

/* If user has a system preference, use that initially */
@media (prefers-color-scheme: dark) {
  :root:not(.light):not(.light-mode) {
    /* empty — JS handles .dark for predictability */
  }
}

/* -------------------------
   Base layout
   ------------------------- */
* { box-sizing:border-box }
html,body { height:100% }
body {
  margin:0;
  font-family: Inter, ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
  background: radial-gradient(1200px 400px at 10% 10%, rgba(79,70,229,0.06), transparent),
              radial-gradient(800px 300px at 90% 90%, rgba(16,185,129,0.03), transparent),
              var(--bg);
  color:var(--text);
  -webkit-font-smoothing:antialiased;
  -moz-osx-font-smoothing:grayscale;
  line-height:1.45;
  padding:28px;
}

.container {
  max-width:1100px;
  margin:0 auto;
}

header {
  display:flex;
  align-items:center;
  justify-content:space-between;
  gap:16px;
  margin-bottom:28px;
}

.brand {
  display:flex;
  gap:12px;
  align-items:center;
  text-decoration:none;
  color:inherit;
}

.logo {
  width:44px;
  height:44px;
  display:inline-grid;
  place-items:center;
  border-radius:10px;
  background:linear-gradient(135deg,var(--accent), #3b82f6 60%);
  box-shadow:var(--shadow);
  color:white;
  font-weight:700;
  font-size:18px;
}

h1 {
  margin:0;
  font-size:20px;
  letter-spacing:-0.2px;
}
p.lead {
  margin:6px 0 0 0;
  color:var(--muted);
  font-size:14px;
}

/* -------------------------
   Toggle button
   ------------------------- */
.theme-toggle {
  border:0;
  background:var(--glass);
  backdrop-filter: blur(6px);
  padding:8px;
  border-radius:999px;
  display:inline-flex;
  gap:8px;
  align-items:center;
  cursor:pointer;
  box-shadow:var(--shadow);
}
.theme-toggle:focus { outline:3px solid var(--accent-weak); outline-offset:3px }

.toggle-icon {
  width:20px; height:20px;
  display:inline-block;
}

/* -------------------------
   Hero / cards
   ------------------------- */
.hero {
  display:grid;
  grid-template-columns: 1fr 320px;
  gap:18px;
  align-items:start;
  margin-bottom:28px;
}

.card {
  background:var(--card);
  border-radius:var(--radius);
  padding:18px;
  box-shadow:var(--shadow);
  border:1px solid rgba(255,255,255,0.02);
}

.intro h2 { margin:0 0 8px 0; font-size:28px }
.intro p { margin:0; color:var(--muted) }

.actions { margin-top:14px; display:flex; gap:8px; flex-wrap:wrap }
.btn {
  padding:10px 14px;
  border-radius:10px;
  border:0;
  cursor:pointer;
  font-weight:600;
  background:linear-gradient(180deg,var(--accent), #5b45ff);
  color:white;
  box-shadow: 0 8px 18px rgba(79,70,229,0.18);
}
.btn.ghost {
  background:transparent;
  color:var(--text);
  border:1px solid rgba(255,255,255,0.04);
  box-shadow:none;
}

/* features grid */
.features {
  margin-top:18px;
  display:grid;
  grid-template-columns:repeat(2,1fr);
  gap:12px;
}
.feature {
  padding:12px;
  border-radius:10px;
  background:linear-gradient(180deg, rgba(255,255,255,0.02), transparent);
  border:1px solid rgba(255,255,255,0.02);
}
.feature h3 { margin:0 0 8px 0; font-size:15px }
.feature p { margin:0; color:var(--muted); font-size:13px }

/* code sample */
pre code {
  display:block;
  padding:12px;
  border-radius:8px;
  background:var(--code-bg);
  overflow:auto;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, "Roboto Mono", monospace;
  font-size:13px;
  color:inherit;
}

footer {
  margin-top:28px;
  text-align:center;
  color:var(--muted);
  font-size:13px;
}

/* small screens */
@media (max-width:880px) {
  .hero { grid-template-columns: 1fr; }
  .features { grid-template-columns:1fr }
  body { padding:18px }
}
📄 main.js
(contains all the JavaScript that was in your <script> tag)

(function () {
  const storageKey = 'site-theme'; // values: "dark", "light", null
  const html = document.documentElement;
  const toggle = document.getElementById('theme-toggle');
  const iconSun = document.getElementById('icon-sun');
  const iconMoon = document.getElementById('icon-moon');
  const label = document.getElementById('theme-label');

  const saved = localStorage.getItem(storageKey);

  function applyTheme(theme) {
    if (theme === 'dark') {
      html.classList.add('dark', 'dark-mode');
      html.classList.remove('light', 'light-mode');
      iconSun.style.display = 'none';
      iconMoon.style.display = 'inline-block';
      toggle.setAttribute('aria-pressed', 'true');
      label.textContent = 'Dark';
    } else if (theme === 'light') {
      html.classList.add('light', 'light-mode');
      html.classList.remove('dark', 'dark-mode');
      iconSun.style.display = 'inline-block';
      iconMoon.style.display = 'none';
      toggle.setAttribute('aria-pressed', 'false');
      label.textContent = 'Light';
    } else {
      html.classList.remove('dark', 'light', 'dark-mode', 'light-mode');
      const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
      if (prefersDark) {
        iconSun.style.display = 'none';
        iconMoon.style.display = 'inline-block';
        label.textContent = 'System (dark)';
      } else {
        iconSun.style.display = 'inline-block';
        iconMoon.style.display = 'none';
        label.textContent = 'System (light)';
      }
      toggle.setAttribute('aria-pressed', 'false');
    }
  }

  applyTheme(saved);

  toggle.addEventListener('click', () => {
    const current = localStorage.getItem(storageKey);
    if (current === 'dark') {
      localStorage.setItem(storageKey, 'light');
      applyTheme('light');
    } else if (current === 'light') {
      localStorage.removeItem(storageKey);
      applyTheme(null);
    } else {
      localStorage.setItem(storageKey, 'dark');
      applyTheme('dark');
    }
  });

  if (window.matchMedia) {
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
      const hasSaved = localStorage.getItem(storageKey) !== null;
      if (!hasSaved) applyTheme(null);
    });
  }
})();
Do you want me to also minify mgu.css and main.js so they load faster on your live site? That could speed up your build.