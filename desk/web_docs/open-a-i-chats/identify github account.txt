You said:
I have three github accounts. How do I know which account is pushing to my repo
ChatGPT said:

You can figure out which GitHub account is being used to push to a repository by checking the Git configuration and authentication method. Here’s a step-by-step approach:

1. Check the remote URL

In your repository, run:

git remote -v


You’ll see something like:

origin  https://github.com/username/repo.git (fetch)
origin  https://github.com/username/repo.git (push)


If it’s an HTTPS URL, Git uses the credentials stored in your credential manager.

If it’s an SSH URL (git@github.com:username/repo.git), it uses your SSH key to authenticate.

2. Check your Git username and email

Run:

git config user.name
git config user.email


This shows the name/email that will appear in commits, but note: it doesn’t necessarily indicate which GitHub account is being used for authentication, just for commit metadata.

To see the global config:

git config --global user.name
git config --global user.email

3. Test the authentication

If you’re using HTTPS:

git push


If prompted for username/password or token, that’s the account being used.

On Windows, Git Credential Manager usually saves the last used account.

If you’re using SSH:

ssh -T git@github.com


This will return something like:

Hi username! You've successfully authenticated, but GitHub does not provide shell access.


That username is the account your SSH key is associated with.

4. Check which SSH key is used

If you have multiple accounts with different SSH keys:

ssh-add -l


It lists the currently loaded SSH keys. Then check your ~/.ssh/config to see which key is used for GitHub. For example:

Host github.com
  User git
  HostName github.com
  IdentityFile ~/.ssh/id_rsa_personal


✅ Summary:

HTTPS → credentials stored in credential manager; the account you type in or saved last.

SSH → account linked to the SSH key used.

If you want, I can give you a quick command that will tell exactly which GitHub account will be used for pushing right now, without guessing. Do you want me to do that?

You said:
How do I switch from   https://github.com/EPSILON-GROUP-MRELLC/MGU.git  to   https://github.com/Malone-Global-University/MU.git 
ChatGPT said:

You can switch your Git repository to push to a new remote URL with the git remote set-url command. Here's exactly how:

1. Check your current remote
git remote -v


You might see something like:

origin  https://github.com/EPSILON-GROUP-MRELLC/MGU.git (fetch)
origin  https://github.com/EPSILON-GROUP-MRELLC/MGU.git (push)

2. Change the remote URL
git remote set-url origin https://github.com/Malone-Global-University/MU.git

3. Verify the change
git remote -v


Now it should show:

origin  https://github.com/Malone-Global-University/MU.git (fetch)
origin  https://github.com/Malone-Global-University/MU.git (push)

4. Push to the new remote
git push -u origin main


Replace main with your branch name if it’s different.

If it asks for credentials, provide the GitHub account for Malone-Global-University.

If you want, I can also show you how to switch accounts cleanly so it pushes with the correct GitHub credentials, especially since you have multiple accounts. This avoids credential conflicts. Do you want me to do that?