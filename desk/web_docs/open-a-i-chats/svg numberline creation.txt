make an svg of a colored number-line that I can use in make lessons as a visual aid. 
ChatGPT said:
Thought for 11s

Here’s a clean, copy-pasteable SVG number line you can drop into your lessons. It’s fully vector (scales cleanly), has arrows, colored regions (negative = red tint, positive = green tint), major/minor ticks, and labeled integers from −10 to 10. You can tweak colors, range, or fonts by editing the values near the top.

<!-- Number Line SVG (−10 to 10) -->
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 800 180" width="100%" role="img" aria-labelledby="title desc">
  <title id="title">Number Line from −10 to 10</title>
  <desc id="desc">A horizontal number line with arrows, negative side lightly red, positive side lightly green, and zero highlighted.</desc>

  <style>
    /* ======= easy-to-tweak variables ======= */
    .vars {
      --bg: #ffffff;
      --axis: #222;
      --tick: #333;
      --label: #111;
      --major: #000;
      --zero: #0057ff;
      --negFill: #ffdddd;
      --posFill: #ddffdd;
      --negStroke: #ff6b6b;
      --posStroke: #49a04d;
      --font: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji","Segoe UI Emoji";
    }
    svg { background: var(--bg); font-family: var(--font); }
    .axis-line { stroke: var(--axis); stroke-width: 3; }
    .region.neg { fill: var(--negFill); stroke: var(--negStroke); }
    .region.pos { fill: var(--posFill); stroke: var(--posStroke); }
    .zero-line { stroke: var(--zero); stroke-width: 3; }
    .tick { stroke: var(--tick); stroke-width: 2; }
    .tick.major { stroke-width: 3; }
    .label { fill: var(--label); font-size: 14px; dominant-baseline: hanging; text-anchor: middle; }
    .label.major { fill: var(--major); font-weight: 600; }
    .label.zero { fill: var(--zero); font-weight: 700; }
    .caption { fill: #666; font-size: 12px; }
  </style>

  <!-- defs for arrowheads -->
  <defs>
    <marker id="arrowEnd" viewBox="0 0 12 12" refX="10" refY="6" markerWidth="10" markerHeight="10" orient="auto-start-reverse">
      <path d="M0,0 L12,6 L0,12 Z" fill="currentColor"/>
    </marker>
  </defs>

  <!-- coordinate helpers -->
  <!-- Axis runs from x=60 to x=740, centered vertically at y=90.
       Step (one unit) = 34px. x(n) = 60 + (n + 10) * 34 -->
  <g class="vars">
    <!-- colored regions -->
    <rect class="region neg" x="60" y="64" width="340" height="52" rx="6" />
    <rect class="region pos" x="400" y="64" width="340" height="52" rx="6" />

    <!-- main axis with arrows -->
    <g stroke="currentColor" color="var(--axis)">
      <line class="axis-line" x1="60" y1="90" x2="740" y2="90" marker-start="url(#arrowEnd)" marker-end="url(#arrowEnd)"/>
    </g>

    <!-- zero highlight -->
    <line class="zero-line" x1="400" y1="56" x2="400" y2="124"/>

    <!-- ticks & labels -->
    <!-- minor ticks each integer, taller for major multiples of 5 -->
    <!-- We’ll list all integers from -10 to 10 -->
    <!-- Helper: function for position in comments
         x(-10)=60, -9=94, -8=128, -7=162, -6=196, -5=230, -4=264, -3=298, -2=332, -1=366,
         0=400, 1=434, 2=468, 3=502, 4=536, 5=570, 6=604, 7=638, 8=672, 9=706, 10=740
    -->
    <!-- Generate ticks -->
    <!-- y top/bottom for minor: 78..102, for major: 72..108 -->
    <!-- -10 -->
    <line class="tick major" x1="60" y1="72" x2="60" y2="108" />
    <text class="label major" x="60" y="110">−10</text>

    <!-- -9 -->
    <line class="tick" x1="94" y1="78" x2="94" y2="102" />
    <text class="label" x="94" y="104">−9</text>

    <!-- -8 -->
    <line class="tick" x1="128" y1="78" x2="128" y2="102" />
    <text class="label" x="128" y="104">−8</text>

    <!-- -7 -->
    <line class="tick" x1="162" y1="78" x2="162" y2="102" />
    <text class="label" x="162" y="104">−7</text>

    <!-- -6 -->
    <line class="tick" x1="196" y1="78" x2="196" y2="102" />
    <text class="label" x="196" y="104">−6</text>

    <!-- -5 -->
    <line class="tick major" x1="230" y1="72" x2="230" y2="108" />
    <text class="label major" x="230" y="110">−5</text>

    <!-- -4 -->
    <line class="tick" x1="264" y1="78" x2="264" y2="102" />
    <text class="label" x="264" y="104">−4</text>

    <!-- -3 -->
    <line class="tick" x1="298" y1="78" x2="298" y2="102" />
    <text class="label" x="298" y="104">−3</text>

    <!-- -2 -->
    <line class="tick" x1="332" y1="78" x2="332" y2="102" />
    <text class="label" x="332" y="104">−2</text>

    <!-- -1 -->
    <line class="tick" x1="366" y1="78" x2="366" y2="102" />
    <text class="label" x="366" y="104">−1</text>

    <!-- 0 -->
    <line class="tick major" x1="400" y1="68" x2="400" y2="112" />
    <text class="label zero" x="400" y="114">0</text>

    <!-- 1 -->
    <line class="tick" x1="434" y1="78" x2="434" y2="102" />
    <text class="label" x="434" y="104">1</text>

    <!-- 2 -->
    <line class="tick" x1="468" y1="78" x2="468" y2="102" />
    <text class="label" x="468" y="104">2</text>

    <!-- 3 -->
    <line class="tick" x1="502" y1="78" x2="502" y2="102" />
    <text class="label" x="502" y="104">3</text>

    <!-- 4 -->
    <line class="tick" x1="536" y1="78" x2="536" y2="102" />
    <text class="label" x="536" y="104">4</text>

    <!-- 5 -->
    <line class="tick major" x1="570" y1="72" x2="570" y2="108" />
    <text class="label major" x="570" y="110">5</text>

    <!-- 6 -->
    <line class="tick" x1="604" y1="78" x2="604" y2="102" />
    <text class="label" x="604" y="104">6</text>

    <!-- 7 -->
    <line class="tick" x1="638" y1="78" x2="638" y2="102" />
    <text class="label" x="638" y="104">7</text>

    <!-- 8 -->
    <line class="tick" x1="672" y1="78" x2="672" y2="102" />
    <text class="label" x="672" y="104">8</text>

    <!-- 9 -->
    <line class="tick" x1="706" y1="78" x2="706" y2="102" />
    <text class="label" x="706" y="104">9</text>

    <!-- 10 -->
    <line class="tick major" x1="740" y1="72" x2="740" y2="108" />
    <text class="label major" x="740" y="110">10</text>

    <!-- captions -->
    <text class="caption" x="60" y="38" text-anchor="start">Negative numbers</text>
    <text class="caption" x="740" y="38" text-anchor="end">Positive numbers</text>
  </g>
</svg>


Quick tips:

Change the range: adjust the x positions (noted in comments) or scale the whole thing by editing viewBox/width.

Recolor quickly: modify the CSS variables in .vars (e.g., --negFill, --posFill, --zero).

Thicker/thinner ticks: tweak .tick/.tick.major stroke widths.

To embed in Markdown: wrap with raw HTML fences or use an <img src="data:image/svg+xml;utf8,..."> data URI.

Want a blank/unstyled variant, a 0–20 line, or a version with fractional tick marks? I can generate those too.

You said:
make a unit circle with pi graduations
ChatGPT said:
Thought for 40s

Here’s a clean, copy-pasteable SVG Unit Circle with π graduations. It has axes, major ticks every π/6 (30°), extra labels for π/4 and π/3 angles, and minor ticks every π/12 (15°). Colors and sizes are easy to tweak via CSS variables at the top.

<!-- Unit Circle SVG with π Graduations -->
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 640" width="100%" role="img" aria-labelledby="title desc">
  <title id="title">Unit Circle with π Graduations</title>
  <desc id="desc">A unit circle centered on the origin with axes, ticks at π/12, labeled angles at π/6, plus highlighted π/4 and π/3 angles.</desc>

  <style>
    /* ===== tweakable variables ===== */
    .vars {
      --bg: #ffffff;
      --circle: #111;
      --axes: #333;
      --tick: #444;
      --tickMinor: #777;
      --majorLabel: #111;
      --special: #0b6cff; /* π/4 and π/3 labels */
      --quadLabel: #d12c2c; /* quadrantal labels (π/2, π, 3π/2) */
      --axisLabel: #555;
      --coordDot: #111;
      --font: ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, Helvetica, Arial;
    }
    svg { background: var(--bg); font-family: var(--font); }
    .circle { stroke: var(--circle); stroke-width: 2.5; fill: none; }
    .axes { stroke: var(--axes); stroke-width: 2; }
    .tick { stroke: var(--tick); stroke-width: 2.2; }
    .tick.minor { stroke: var(--tickMinor); stroke-width: 1.4; }
    .label { font-size: 14px; fill: var(--majorLabel); text-anchor: middle; dominant-baseline: middle; }
    .label.special { fill: var(--special); font-weight: 600; }
    .label.quad { fill: var(--quadLabel); font-weight: 700; }
    .axisLabel { font-size: 13px; fill: var(--axisLabel); }
    .unitDot { fill: var(--coordDot); }
  </style>

  <!-- coordinate system -->
  <!-- center (cx,cy) and radius r -->
  <g class="vars" transform="translate(320,320)">
    <defs>
      <marker id="arrow" viewBox="0 0 12 12" refX="10" refY="6" markerWidth="9" markerHeight="9" orient="auto">
        <path d="M0,0 L12,6 L0,12 Z" fill="currentColor"/>
      </marker>
    </defs>

    <!-- circle of radius 1 (visual radius r px) -->
    <circle class="circle" r="220"/>

    <!-- axes with arrows -->
    <g stroke="currentColor" color="var(--axes)">
      <line class="axes" x1="-260" y1="0" x2="260" y2="0" marker-end="url(#arrow)"/>
      <line class="axes" x1="0" y1="260" x2="0" y2="-260" marker-end="url(#arrow)"/>
    </g>

    <!-- axis labels (x and y) -->
    <text class="axisLabel" x="252" y="-16">x</text>
    <text class="axisLabel" x="14" y="-252">y</text>

    <!-- tick generators -->
    <!-- lengths: minor=10, major=16, quad=22 -->
    <!-- we draw ticks by rotating a radial line around the origin -->
    <g id="tickMinor">
      <line class="tick minor" x1="220" y1="0" x2="210" y2="0"/>
    </g>
    <g id="tickMajor">
      <line class="tick" x1="220" y1="0" x2="204" y2="0"/>
    </g>
    <g id="tickQuad">
      <line class="tick" x1="220" y1="0" x2="198" y2="0"/>
    </g>

    <!-- minor ticks every 15° (π/12) -->
    <g>
      <!-- 24 positions -->
      <use href="#tickMinor" transform="rotate(15)"/>
      <use href="#tickMinor" transform="rotate(45)"/>
      <use href="#tickMinor" transform="rotate(75)"/>
      <use href="#tickMinor" transform="rotate(105)"/>
      <use href="#tickMinor" transform="rotate(135)"/>
      <use href="#tickMinor" transform="rotate(165)"/>
      <use href="#tickMinor" transform="rotate(195)"/>
      <use href="#tickMinor" transform="rotate(225)"/>
      <use href="#tickMinor" transform="rotate(255)"/>
      <use href="#tickMinor" transform="rotate(285)"/>
      <use href="#tickMinor" transform="rotate(315)"/>
      <use href="#tickMinor" transform="rotate(345)"/>
      <!-- also include the 0/30/60… via major groups -->
    </g>

    <!-- major ticks every 30° (π/6) -->
    <g>
      <use href="#tickMajor" transform="rotate(0)"/>
      <use href="#tickMajor" transform="rotate(30)"/>
      <use href="#tickMajor" transform="rotate(60)"/>
      <use href="#tickMajor" transform="rotate(90)"/>
      <use href="#tickMajor" transform="rotate(120)"/>
      <use href="#tickMajor" transform="rotate(150)"/>
      <use href="#tickMajor" transform="rotate(180)"/>
      <use href="#tickMajor" transform="rotate(210)"/>
      <use href="#tickMajor" transform="rotate(240)"/>
      <use href="#tickMajor" transform="rotate(270)"/>
      <use href="#tickMajor" transform="rotate(300)"/>
      <use href="#tickMajor" transform="rotate(330)"/>
    </g>

    <!-- quadrantal ticks (0, 90, 180, 270) -->
    <g>
      <use href="#tickQuad" transform="rotate(0)"/>
      <use href="#tickQuad" transform="rotate(90)"/>
      <use href="#tickQuad" transform="rotate(180)"/>
      <use href="#tickQuad" transform="rotate(270)"/>
    </g>

    <!-- labels (slightly outside the circle) -->
    <!-- place labels at radius 238 -->
    <!-- helper: label at angle θ with text-anchor middle, not rotated for readability -->
    <!-- π/6 family (every 30°) -->
    <g>
      <!-- 0 -->
      <text class="label" x="238" y="0">0</text>
      <!-- 30 -->
      <g transform="rotate(30)"><text class="label" x="238" y="0">π/6</text></g>
      <!-- 60 -->
      <g transform="rotate(60)"><text class="label special" x="238" y="0">π/3</text></g>
      <!-- 90 -->
      <g transform="rotate(90)"><text class="label quad" x="238" y="0">π/2</text></g>
      <!-- 120 -->
      <g transform="rotate(120)"><text class="label" x="238" y="0">2π/3</text></g>
      <!-- 150 -->
      <g transform="rotate(150)"><text class="label" x="238" y="0">5π/6</text></g>
      <!-- 180 -->
      <g transform="rotate(180)"><text class="label quad" x="238" y="0">π</text></g>
      <!-- 210 -->
      <g transform="rotate(210)"><text class="label" x="238" y="0">7π/6</text></g>
      <!-- 240 -->
      <g transform="rotate(240)"><text class="label special" x="238" y="0">4π/3</text></g>
      <!-- 270 -->
      <g transform="rotate(270)"><text class="label quad" x="238" y="0">3π/2</text></g>
      <!-- 300 -->
      <g transform="rotate(300)"><text class="label special" x="238" y="0">5π/3</text></g>
      <!-- 330 -->
      <g transform="rotate(330)"><text class="label" x="238" y="0">11π/6</text></g>
      <!-- (2π would overlap 0) -->
    </g>

    <!-- extra labels for π/4 family (45°, 135°, 225°, 315°) -->
    <g>
      <g transform="rotate(45)"><text class="label special" x="238" y="0">π/4</text></g>
      <g transform="rotate(135)"><text class="label special" x="238" y="0">3π/4</text></g>
      <g transform="rotate(225)"><text class="label special" x="238" y="0">5π/4</text></g>
      <g transform="rotate(315)"><text class="label special" x="238" y="0">7π/4</text></g>
    </g>

    <!-- unit points on axes -->
    <circle class="unitDot" cx="220" cy="0" r="3.2"/>
    <circle class="unitDot" cx="-220" cy="0" r="3.2"/>
    <circle class="unitDot" cx="0" cy="220" r="3.2"/>
    <circle class="unitDot" cx="0" cy="-220" r="3.2"/>

    <!-- small axis tick labels for x=±1, y=±1 -->
    <text class="axisLabel" x="220" y="16">(1, 0)</text>
    <text class="axisLabel" x="-220" y="16" text-anchor="end">(-1, 0)</text>
    <text class="axisLabel" x="-10" y="-220" text-anchor="end">(0, 1)</text>
    <text class="axisLabel" x="-10" y="220" text-anchor="end">(0, -1)</text>
  </g>
</svg>


Quick tweaks

Scale it: change the viewBox or set a fixed width/height.

Colors: adjust CSS variables in .vars (e.g., --special, --quadLabel).

Density: remove the <g> with minor ticks if you want a cleaner look.

Add coordinates at special angles: say the word and I’ll generate a version with 
(
cos
⁡
𝜃
,
sin
⁡
𝜃
)
(cosθ,sinθ) around the rim.

Cha